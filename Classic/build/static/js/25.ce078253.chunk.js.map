{"version":3,"sources":["api/catalog-api.ts","types/CatalogType.ts","layouts/inner-app-layout/index.js","views/app-views/shared/ckeditor/index.js","api/question-api.ts","types/QuestionType.ts","assets/svg/icon.js","components/util-components/CustomIcon/index.js","views/app-views/questioncategory/edit/index.js","views/app-views/questioncategory/index.js","views/app-views/question/list/index.js","views/app-views/question/QuestionForm/Answers.js","views/app-views/question/QuestionForm/Editor/FillTheBlank/index.js","views/app-views/question/QuestionForm/GeneralField.js","views/app-views/question/QuestionForm/ChildrenQuestions.js","views/app-views/question/QuestionForm/index.js","views/app-views/question/add/index.js","views/app-views/question/edit/index.js","views/app-views/question/index.js"],"names":["CatalogApi","catalogType","type","url","getAll","baseApiUrl","axios","get","getCategoriesByCatalogId","catalogId","CatalogType","QUESTION_CATEGORY","EXAM_CATEGORY","COURSE_CATEGORY","POST_CATEGORY","PROGRAM_CATALOG","BOOK_CATALOG","SUBJECT_CATALOG","SCHOOL_BLOCK_CATALOG","DOCUMENT_ORGANIZATION","DOCUMENT_TOPIC","DOCUMENT_AREA","DOCUMENT_SIGNER","DOCUMENT_POSITION","MATERIAL_CATEGORY","LIBRARY_CATEGORY","ApiBase","QuestionCategoryApi","ExamCategoryApi","CourseCategoryApi","TESTGROUP_CATEGORY","PostCategoryApi","MaterialCategoryApi","LibraryCategoryApi","useBreakpoint","Grid","SideContent","props","sideContent","sideContentWidth","border","className","style","width","SideContentMobile","visible","onSideContentClose","placement","closable","onClose","bodyStyle","paddingLeft","paddingRight","InnerAppLayout","mainContent","pageHeader","sideContentGutter","isMobile","utils","getBreakPoint","includes","useState","setVisible","e","onClick","CkEditor","editor","Editor","data","onChange","event","getData","config","toolbar","items","shouldNotGroupWhenFull","image","styles","resizeOptions","name","label","value","ckfinder","uploadUrl","Configuration","baseUrl","mediaEmbed","previewsInData","onReady","console","log","QuestionApi","getQuestionTypes","parseFillTheBlankQuestion","question","post","saveSetting","put","createQuestion","typeName","code","order","id","files","createdBy","lastModifiedBy","createdTime","lastModifiedTime","find","x","QuestionTypeEnum","SC","MC","content","parentId","explain","contentFormat","totalQuestion","questionTypeId","questionTypeName","categoryId","answers","createAnswer","TF","GQ","SA","children","isCorrect","questionId","parentQuestionId","QuestionType","ImageSvg","viewBox","height","fill","d","cx","cy","r","CustomIcon","React","forwardRef","_","component","svg","QuestionCategoryEdit","item","description","state","isLoading","isLoading1","componentDidMount","then","response","setState","handleChange","persist","currentItem","Object","assign","targetValue","target","checked","onAdd","isContinue","parent","save","message","success","onSaved","layout","hideRequiredMark","this","gutter","span","Item","defaultValue","readOnly","placeholder","TextArea","rows","marginRight","loading","Component","confirm","Modal","QuestionCategory","treeData","selectedNode","hasChanged","onEditing","fetchData","match","params","add","addChild","key","title","edit","closeAddOrEdit","onSelect","selectedKeys","info","selectedNodes","length","delete","okText","okType","cancelText","onOk","onCancel","alignItems","flex","showIcon","autoExpandParent","defaultExpandAll","draggable","blockNode","size","icon","PlusOutlined","disabled","EditOutlined","DeleteOutlined","danger","TabPane","Tabs","Option","Select","Search","Input","QuestionList","history","useHistory","questionTypes","setQuestionTypes","catalog","setCatalog","setData","categories","setCategories","totalItems","setTotalItems","page","setPage","setCategoryId","questionType","setQuestionType","keyword","setKeyword","deleteQuestion","row","searchQuestion","addQuestion","typeCode","push","editQuestion","searches","useEffect","QuestionCatalogApi","PageHeaderAlt","overlap","Flex","mobileFlex","justifyContent","defaultActiveKey","marginTop","activeKey","tab","block","onSearch","parseInt","map","onClear","dropdownStyle","maxHeight","overflow","allowClear","treeDefaultExpandAll","textAlign","overlay","PlusCircleOutlined","DownOutlined","index","to","shortContent","categoryName","moment","format","EllipsisDropdown","menu","Divider","showSizeChanger","total","defaultCurrent","pageSize","rules","required","price","comparePrice","taxRate","cost","Answers","setItem","anwser","MinusCircleOutlined","filter","removeAnswer","Panel","Collapse","FillTheBlankEditor","setQuestion","renderAs","caseInsensitiveMask","setting","setSetting","onChangeRadioControl","newValue","newSetting","paddingBottom","footer","settingJSON","JSON","stringify","color","padding","header","previewContent","Group","Button","Dragger","Upload","GeneralField","openFBEditor","setOpenFBEditor","getQuestionCategories","xs","sm","md","FB","SettingOutlined","newAnswer","addAnswer","handleUploadChange","uploadedImg","src","alt","uploadLoading","LoadingOutlined","changeCategoryId","FillTheBlank","ChildrenQuestions","parentQuesion","setParentQuestion","ADD","EDIT","QuestionForm","mode","param","Form","useForm","form","setImage","setUploadLoading","submitLoading","setSubmitLoading","setTypeCode","editItem","setEditItem","questionApi","goBack","htmlType","file","status","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","originFileObj","imageUrl","AddQuestion","EditQuestion","QuestionRoute","exact","from","path"],"mappings":"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","file":"static/js/25.ce078253.chunk.js","sourcesContent":["import ApiBase from \"./api-base\";\r\nimport axios from \"axios\";\r\nimport { CatalogType } from \"../types/CatalogType\";\r\n\r\nclass CatalogApi extends ApiBase {\r\n  type: CatalogType;\r\n  url: string;\r\n\r\n  constructor(catalogType: CatalogType) {\r\n    super(\"\");\r\n\r\n    this.url = \"\";\r\n    this.type = catalogType;\r\n\r\n    if (catalogType === CatalogType.QUESTION_CATEGORY) {\r\n      this.baseApiUrl += \"questioncategories\";\r\n    }\r\n\r\n    if (catalogType === CatalogType.EXAM_CATEGORY) {\r\n      this.baseApiUrl += \"examcategories\";\r\n    }\r\n\r\n    if (catalogType === CatalogType.COURSE_CATEGORY) {\r\n      this.baseApiUrl += \"coursecategories\";\r\n    }\r\n\r\n    if (catalogType === CatalogType.POST_CATEGORY) {\r\n      this.baseApiUrl += \"postcategories\";\r\n    }\r\n\r\n    if (catalogType === CatalogType.PROGRAM_CATALOG) {\r\n      this.baseApiUrl += \"programcatalog\";\r\n    }\r\n\r\n    if (catalogType === CatalogType.BOOK_CATALOG) {\r\n      this.baseApiUrl += \"bookcatalog\";\r\n    }\r\n\r\n    if (catalogType === CatalogType.SUBJECT_CATALOG) {\r\n      this.baseApiUrl += \"subjectcatalog\";\r\n    }\r\n\r\n    if (catalogType === CatalogType.SCHOOL_BLOCK_CATALOG) {\r\n      this.baseApiUrl += \"schoolblockcatalog\";\r\n    }\r\n\r\n    if (catalogType === CatalogType.DOCUMENT_ORGANIZATION) {\r\n      this.baseApiUrl += \"organizationCatalog\";\r\n    }\r\n\r\n    if (catalogType === CatalogType.DOCUMENT_TOPIC) {\r\n      this.baseApiUrl += \"topicCatalog\";\r\n    }\r\n\r\n    if (catalogType === CatalogType.DOCUMENT_AREA) {\r\n      this.baseApiUrl += \"areaCatalog\";\r\n    }\r\n\r\n    if (catalogType === CatalogType.DOCUMENT_SIGNER) {\r\n      this.baseApiUrl += \"signerCatalog\";\r\n    }\r\n\r\n    if (catalogType === CatalogType.DOCUMENT_POSITION) {\r\n      this.baseApiUrl += \"positionCatalog\";\r\n    }\r\n\r\n    if (catalogType === CatalogType.MATERIAL_CATEGORY) {\r\n      this.baseApiUrl += \"materialcategories\";\r\n    }\r\n\r\n    if (catalogType === CatalogType.LIBRARY_CATEGORY) {\r\n      this.baseApiUrl += \"librarycategories\";\r\n    }\r\n  }\r\n\r\n  getAll = () => {\r\n    const url = `${this.baseApiUrl}`;\r\n    const response = axios.get(url);\r\n    return response;\r\n  };\r\n\r\n  getCategoriesByCatalogId = (catalogId: number) => {\r\n    const url = `${this.baseApiUrl}/GetByCatalogId/${catalogId}`;\r\n    const response = axios.get(url);\r\n    return response;\r\n  };\r\n}\r\n\r\nexport const QuestionCategoryApi = new CatalogApi(CatalogType.QUESTION_CATEGORY);\r\n\r\nexport const ExamCategoryApi = new CatalogApi(CatalogType.EXAM_CATEGORY);\r\n\r\nexport const TestGroupCategoryApi = new CatalogApi(CatalogType.TESTGROUP_CATEGORY);\r\n\r\nexport const CourseCategoryApi = new CatalogApi(CatalogType.COURSE_CATEGORY);\r\n\r\nexport const PostCategoryApi = new CatalogApi(CatalogType.POST_CATEGORY);\r\n\r\nexport const MaterialCategoryApi = new CatalogApi(CatalogType.MATERIAL_CATEGORY);\r\n\r\nexport const LibraryCategoryApi = new CatalogApi(CatalogType.LIBRARY_CATEGORY);\r\n\r\nexport default CatalogApi;\r\n\r\n","export enum CatalogType {\r\n    /// myStudies\r\n    QUESTION_CATEGORY=1,\r\n    TESTGROUP_CATEGORY = 4,\r\n    DEPARTMENT = 8,\r\n    LEARNINGMATERIAL_CATEGORY = 16,\r\n    COURSE_CATEGORY = 32,\r\n    EXAM_CATEGORY= 64,\r\n    CLASSES =8,\r\n    POST_CATEGORY= 128,\r\n    PROGRAM_CATALOG=129, // Chương trình\r\n    SUBJECT_CATALOG= 130, // Môn học\r\n    SCHOOL_BLOCK_CATALOG= 131, // Khối lớp\r\n    BOOK_CATALOG = 132,  // Bộ sách\r\n\r\n    ///Quản lý Văn bản - myOffice\r\n    DOCUMENT_ORGANIZATION = 133, // Cơ quan\r\n    DOCUMENT_TOPIC = 134, // Chủ đề\r\n    DOCUMENT_AREA = 135, // Lĩnh vực\r\n    DOCUMENT_POSITION = 136, // Chức danh\r\n    DOCUMENT_SIGNER = 137, // Chức danh\r\n\r\n    ///Điều hành - myLesson\r\n    MATERIAL_CATEGORY = 138, // Chức danh\r\n    LIBRARY_CATEGORY = 139, // Chức danh\r\n  };","import React, { useState } from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid, Drawer } from \"antd\";\r\nimport utils from 'utils'\r\nimport { MenuOutlined } from '@ant-design/icons';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst SideContent = props => {\r\n\tconst { sideContent, sideContentWidth = 250, border } = props\r\n\treturn (\r\n\t\t<div className={`side-content ${border? 'with-border': ''}`} style={{width: `${sideContentWidth}px`}}>\r\n\t\t\t{sideContent}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst SideContentMobile = props => {\r\n\tconst { sideContent, visible, onSideContentClose } = props\r\n\treturn (\r\n\t\t<Drawer\r\n\t\t\twidth={320}\r\n\t\t\tplacement=\"left\"\r\n\t\t\tclosable={false}\r\n\t\t\tonClose={onSideContentClose}\r\n\t\t\tvisible={visible}\r\n\t\t\tbodyStyle={{paddingLeft: 0, paddingRight: 0}}\r\n\t\t>\r\n\t\t\t<div className=\"h-100\">\r\n\t\t\t\t{sideContent}\r\n\t\t\t</div>\r\n\t\t</Drawer>\r\n\t)\r\n}\r\n\r\nexport const InnerAppLayout = props => {\r\n\tconst { mainContent, pageHeader, sideContentGutter = true } = props\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\tconst [visible, setVisible] = useState(false);\r\n\r\n\tconst close = (e) => {\r\n\t\tsetVisible(false)\r\n\t} \r\n\r\n\tconst openSideContentMobile = () => {\r\n\t\tsetVisible(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"inner-app-layout\">\r\n\t\t\t{isMobile ? \r\n\t\t\t\t<SideContentMobile \r\n\t\t\t\t\tvisible={visible} \r\n\t\t\t\t\tonSideContentClose={close}\r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/> \r\n\t\t\t\t: \r\n\t\t\t\t<SideContent {...props} />\r\n\t\t\t}\r\n\t\t\t<div className={`main-content ${pageHeader? 'has-page-header' : ''} ${sideContentGutter? 'gutter' : 'no-gutter'}`}>\r\n\t\t\t\t{isMobile ? \r\n\t\t\t\t\t<div className={`font-size-lg mb-3 ${!sideContentGutter ? 'pt-3 px-3' : ''}`}>\r\n\t\t\t\t\t\t<MenuOutlined onClick={() => openSideContentMobile()}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t:\r\n\t\t\t\t\tnull\r\n\t\t\t\t}\r\n\t\t\t\t{mainContent}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nInnerAppLayout.propTypes = {\r\n\tsideContent: PropTypes.node,\r\n\tmainContent: PropTypes.node,\r\n\tpageHeader: PropTypes.bool,\r\n\tsideContentWidth: PropTypes.number,\r\n\tborder: PropTypes.bool,\r\n\tsideContentGutter: PropTypes.bool\r\n};\r\n\r\nexport default InnerAppLayout\r\n","import React from \"react\";\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport Editor from \"ckeditor5-custom-build/build/ckeditor\";\r\nimport { Configuration } from \"configs\";\r\n\r\nconst CkEditor = (props) => {\r\n  return (\r\n    <CKEditor\r\n      editor={Editor}\r\n      data={props.data ?? \"\"}\r\n      onChange={(event, editor) => {\r\n        const data = editor.getData();\r\n        if (props.onChange) {\r\n          props.onChange(data);\r\n        }\r\n      }}\r\n      config={{\r\n        toolbar: {\r\n          items: [\r\n            'ckfinder',\r\n            '|',\r\n            'heading',\r\n            '|',\r\n            'alignment',\r\n            '|',\r\n            'bold',\r\n            'italic',\r\n            'strikethrough',\r\n            'underline',\r\n            '|',\r\n            'link',\r\n            '|',\r\n            'bulletedList',\r\n            'numberedList',\r\n            'indent',\r\n            '|',\r\n            'insertTable',\r\n            'mediaEmbed',\r\n            '|',\r\n            'fontfamily',\r\n            'fontsize',\r\n            'fontColor',\r\n            'fontBackgroundColor',\r\n            '|',\r\n            'subscript',\r\n            'superscript',\r\n            'blockQuote',\r\n            '|',\r\n            'undo',\r\n            'redo'\r\n          ],\r\n          shouldNotGroupWhenFull: false\r\n        },\r\n        image: {\r\n          // Configure the available styles.\r\n          styles: ['alignLeft', 'alignCenter', 'alignRight'],\r\n          // Configure the available image resize options.\r\n          resizeOptions: [\r\n            {\r\n              name: 'imageResize:original',\r\n              label: 'Original',\r\n              value: null\r\n            },\r\n            {\r\n              name: 'imageResize:50',\r\n              label: '50%',\r\n              value: '50'\r\n            },\r\n            {\r\n              name: 'imageResize:75',\r\n              label: '75%',\r\n              value: '75'\r\n            }\r\n          ],\r\n          // You need to configure the image toolbar, too, so it shows the new style\r\n          // buttons as well as the resize buttons.\r\n          toolbar: [\r\n            'imageStyle:alignLeft',\r\n            'imageStyle:alignCenter',\r\n            'imageStyle:alignRight',\r\n            '|',\r\n            'imageResize',\r\n            '|',\r\n            'imageTextAlternative'\r\n          ]\r\n        },\r\n        ckfinder: {\r\n          uploadUrl: `${Configuration.baseUrl}ckfinder/core/connector/aspx/connector.aspx?command=QuickUpload&type=Images&responseType=json`\r\n        },\r\n        mediaEmbed: {\r\n          previewsInData: true\r\n        }\r\n      }}\r\n      onReady={editor => {\r\n        // You can store the \"editor\" and use when it is needed\r\n        console.log('Editor1 is ready to use!', editor);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CkEditor;\r\n","import ApiBase from \"./api-base\";\r\nimport Answer from \"interfaces/Answer\";\r\nimport Question from \"interfaces/Question\";\r\nimport QuestionType from \"interfaces/QuestionType\";\r\nimport axios from \"axios\";\r\nimport { QuestionType as QuestionTypeEnum } from \"types/QuestionType\";\r\n\r\nexport default class QuestionApi extends ApiBase {\r\n  constructor() {\r\n    super(\"questions\");\r\n  }\r\n\r\n  getQuestionTypes = () => {\r\n    const response = axios.get(this.baseApiUrl + \"/QuestionTypes\");\r\n    return response;\r\n  };\r\n\r\n  parseFillTheBlankQuestion = (question: Question) => {\r\n    const response = axios.post(this.baseApiUrl + \"/ParseFillTheBlank\", question);\r\n    return response;\r\n  }\r\n\r\n  saveSetting = (question: Question) => {\r\n    const response = axios.put(this.baseApiUrl + \"/Setting\", question);\r\n    return response;\r\n  }\r\n\r\n  createQuestion = (type: QuestionType): Question => {\r\n    let typeName = \"\";\r\n    var allTypes = [\r\n      {\r\n        code: \"SA\",\r\n        order: 0,\r\n        id: 1,\r\n        name: \"Câu hỏi Trả lời ngắn\",\r\n        files: null,\r\n        createdBy: 1,\r\n        lastModifiedBy: 1,\r\n        createdTime: \"2022-05-06T08:52:43.2899338\",\r\n        lastModifiedTime: \"2022-05-06T08:52:43.3007385\",\r\n      },\r\n      {\r\n        code: \"MC\",\r\n        order: 1,\r\n        id: 2,\r\n        name: \"Câu hỏi Nhiều lựa chọn\",\r\n        files: null,\r\n        createdBy: 1,\r\n        lastModifiedBy: 1,\r\n        createdTime: \"2022-05-06T08:52:43.3007894\",\r\n        lastModifiedTime: \"2022-05-06T08:52:43.3007897\",\r\n      },\r\n      {\r\n        code: \"GQ\",\r\n        order: 2,\r\n        id: 3,\r\n        name: \"Câu hỏi Chính phụ\",\r\n        files: null,\r\n        createdBy: 1,\r\n        lastModifiedBy: 1,\r\n        createdTime: \"2022-05-06T08:52:43.3007898\",\r\n        lastModifiedTime: \"2022-05-06T08:52:43.3007899\",\r\n      },\r\n      {\r\n        code: \"TF\",\r\n        order: 3,\r\n        id: 4,\r\n        name: \"Câu hỏi Đúng/Sai\",\r\n        files: null,\r\n        createdBy: 1,\r\n        lastModifiedBy: 1,\r\n        createdTime: \"2022-05-06T08:52:43.30079\",\r\n        lastModifiedTime: \"2022-05-06T08:52:43.30079\",\r\n      },\r\n      {\r\n        code: \"SC\",\r\n        order: 4,\r\n        id: 5,\r\n        name: \"Câu hỏi Một lựa chọn\",\r\n        files: null,\r\n        createdBy: 1,\r\n        lastModifiedBy: 1,\r\n        createdTime: \"2022-05-06T08:52:43.3007901\",\r\n        lastModifiedTime: \"2022-05-06T08:52:43.3007902\",\r\n      },\r\n      {\r\n        code: \"FB\",\r\n        order: 5,\r\n        id: 6,\r\n        name: \"Câu hỏi Điền từ vào chỗ trống\",\r\n        files: null,\r\n        createdBy: 1,\r\n        lastModifiedBy: 1,\r\n        createdTime: \"2022-05-06T08:52:43.3007901\",\r\n        lastModifiedTime: \"2022-05-06T08:52:43.3007902\",\r\n      },\r\n    ];\r\n    typeName = allTypes.find((x) => x.id === type.id)?.name ?? \"\";\r\n\r\n    if (type.id == QuestionTypeEnum.SC || type.id == QuestionTypeEnum.MC) {\r\n      return {\r\n        id: 0,\r\n        content: \"\",\r\n        name: \"\",\r\n        parentId: 0,\r\n        order: 0,\r\n        explain: \"\",\r\n        contentFormat: \"html\",\r\n        totalQuestion: 0,\r\n        questionTypeId: type.id,\r\n        questionTypeName: typeName,\r\n        categoryId: 0,\r\n        answers: [\r\n          this.createAnswer(-1, 1, \"\", false),\r\n          this.createAnswer(-2, 2, \"\", false),\r\n          this.createAnswer(-3, 3, \"\", false),\r\n          this.createAnswer(-4, 4, \"\", false),\r\n        ],\r\n      };\r\n    }\r\n\r\n    if (type.id == QuestionTypeEnum.TF) {\r\n      return {\r\n        id: 0,\r\n        content: \"\",\r\n        name: \"\",\r\n        parentId: 0,\r\n        order: 0,\r\n        explain: \"\",\r\n        contentFormat: \"html\",\r\n        totalQuestion: 0,\r\n        questionTypeId: type.id,\r\n        questionTypeName: typeName,\r\n        categoryId: 0,\r\n        answers: [\r\n          this.createAnswer(-1, 1, \"Đúng\", true),\r\n          this.createAnswer(-2, 2, \"Sai\", false),\r\n        ],\r\n      };\r\n    }\r\n\r\n    if (type.id == QuestionTypeEnum.GQ) {\r\n      return {\r\n        id: 0,\r\n        content: \"\",\r\n        name: \"\",\r\n        parentId: 0,\r\n        order: 0,\r\n        explain: \"\",\r\n        contentFormat: \"html\",\r\n        totalQuestion: 0,\r\n        questionTypeId: type.id,\r\n        questionTypeName: typeName,\r\n        categoryId: 0,\r\n        answers: [],\r\n        children: [],\r\n      };\r\n    }\r\n\r\n    if (type.id == QuestionTypeEnum.SA) {\r\n      return {\r\n        id: 0,\r\n        content: \"\",\r\n        name: \"\",\r\n        parentId: 0,\r\n        order: 0,\r\n        explain: \"\",\r\n        contentFormat: \"html\",\r\n        totalQuestion: 0,\r\n        questionTypeId: type.id,\r\n        questionTypeName: typeName,\r\n        categoryId: 0,\r\n        answers: [],\r\n        children: [],\r\n      };\r\n    }\r\n\r\n    return {\r\n      id: 0,\r\n      content: \"\",\r\n      name: \"\",\r\n      parentId: 0,\r\n      order: 0,\r\n      explain: \"\",\r\n      contentFormat: \"html\",\r\n      totalQuestion: 0,\r\n      questionTypeId: type.id,\r\n      questionTypeName: typeName,\r\n      categoryId: 0,\r\n      answers: [],\r\n      children: [],\r\n    };\r\n  };\r\n\r\n  createAnswer = (\r\n    id: number,\r\n    order: number,\r\n    content: string,\r\n    isCorrect: boolean\r\n  ): Answer => {\r\n    return {\r\n      id: id,\r\n      content: content,\r\n      isCorrect: isCorrect,\r\n      order: order,\r\n      questionId: 0,\r\n      parentQuestionId: 0,\r\n      name: \"\",\r\n      explain: \"\",\r\n    };\r\n  };\r\n}\r\n","export enum QuestionType {\r\n  SA = 1,\r\n  MC = 2,\r\n  SC = 5,\r\n  GQ = 3,\r\n  TF = 4,\r\n  FB = 6,\r\n}\r\n","import React from \"react\";\r\n\r\nexport const ReplySVG = () => (\r\n  <svg viewBox=\"0 0 1024 1024\" width=\"1em\" height=\"1em\" fill=\"currentColor\">\r\n    <path\r\n      d=\"M537.016,909.264c-7.034,0-14.006-2.372-19.671-6.97L18.508,496.986C11.232,491.055,7,482.161,7,472.781\r\n\t\t\tc0-9.374,4.232-18.267,11.508-24.204L517.345,43.272c9.318-7.551,22.258-9.104,33.064-3.959\r\n\t\t\tc10.871,5.175,17.785,16.135,17.785,28.162v219.277c243.388,16.107,436.483,219.246,436.483,466.625v62.353\r\n\t\t\tc0,12.18-7.097,23.235-18.147,28.314c-11.054,5.119-24.054,3.292-33.311-4.626l-52.55-45.027\r\n\t\t\tc-93.318-79.986-210.359-126.841-332.476-133.66v217.36c0,12.022-6.914,22.986-17.785,28.158\r\n\t\t\tC546.146,908.262,541.58,909.268,537.016,909.264L537.016,909.264z M125.715,472.781L506.65,782.309V614.776\r\n\t\t\tc0-15.697,12.702-28.401,28.399-28.401c134.946,0,265.707,48.367,368.18,136.193l0.972,0.834\r\n\t\t\tc-2.664-201.286-167.231-364.213-369.148-364.213c-15.699,0-28.4-12.704-28.4-28.399V163.258\r\n\t\t\tC506.65,163.258,125.715,472.781,125.715,472.781L125.715,472.781z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport const GoogleSVG = () => (\r\n  <svg viewBox=\"0 0 1024 1024\" width=\"1em\" height=\"1em\" fill=\"currentColor\">\r\n    <g>\r\n      <path\r\n        fill=\"#59C36A\"\r\n        d=\"M827.301,875.968c-84.521,71.388-194.169,116.693-313.528,116.693c-177.609,0-333.52-97.848-418.041-240.62\r\n\t\t\t\tl31.646-145.858l140.255-26.039c32.553,105.078,130.779,182.178,246.141,182.178c55.964,0,107.937-17.703,150.767-49.112\r\n\t\t\t\tl134.777,20.558L827.301,875.968z\"\r\n      />\r\n      <path\r\n        fill=\"#00A66C\"\r\n        d=\"M827.301,875.968l-27.984-142.201l-134.777-20.558c-42.83,31.409-94.803,49.112-150.767,49.112v230.34\r\n\t\t\t\tC633.132,992.661,742.779,947.355,827.301,875.968z\"\r\n      />\r\n      <g id=\"Connected_Home_1_\">\r\n        <g>\r\n          <g>\r\n            <g>\r\n              <path\r\n                fill=\"#FFDA2D\"\r\n                d=\"M256.781,505.331c0,26.267,3.998,51.396,10.851,74.813l-171.9,171.897\r\n\t\t\t\t\t\t\t\tc-42.83-71.957-69.29-156.48-69.29-246.71c0-90.233,26.46-174.754,69.29-246.711l137.965,23.743l33.936,148.154\r\n\t\t\t\t\t\t\t\tC260.779,453.932,256.781,479.06,256.781,505.331L256.781,505.331z\"\r\n              />\r\n            </g>\r\n          </g>\r\n        </g>\r\n      </g>\r\n      <path\r\n        fill=\"#4086F4\"\r\n        d=\"M1001.103,505.331c0,148.48-68.719,281.547-173.802,370.637L664.539,713.209\r\n\t\t\t\tc33.121-23.988,61.107-55.971,79.384-93.66h-230.15c-15.993,0-28.556-12.567-28.556-28.554V419.666\r\n\t\t\t\tc0-15.99,12.563-28.554,28.556-28.554h450.78c13.707,0,25.698,9.708,27.983,23.412\r\n\t\t\t\tC998.247,444.225,1001.103,475.063,1001.103,505.331L1001.103,505.331z\"\r\n      />\r\n      <path\r\n        fill=\"#4175DF\"\r\n        d=\"M743.924,619.549c-18.275,37.689-46.264,69.672-79.382,93.66l162.759,162.759\r\n\t\t\t\tc105.083-89.09,173.802-222.153,173.802-370.637c0-30.269-2.855-61.106-8.567-90.807c-2.284-13.704-14.278-23.412-27.984-23.412\r\n\t\t\t\tH513.772v228.437H743.924z\"\r\n      />\r\n      <path\r\n        fill=\"#FF641A\"\r\n        d=\"M835.297,154.107c0.571,7.996-2.855,15.422-7.996,21.131L705.086,296.881\r\n\t\t\t\tc-9.704,10.278-25.694,11.421-37.118,2.855c-45.119-33.693-98.231-51.396-154.195-51.396\r\n\t\t\t\tc-115.361,0-213.588,77.095-246.141,182.178L95.731,258.62C180.253,115.848,336.163,18,513.772,18\r\n\t\t\t\tc113.647,0,224.439,41.88,311.244,114.978C831.298,138.119,834.723,146.112,835.297,154.107L835.297,154.107z\"\r\n      />\r\n      <path\r\n        fill=\"#F03800\"\r\n        d=\"M667.966,299.736c11.422,8.567,27.411,7.423,37.119-2.855l122.214-121.643\r\n\t\t\t\tc5.143-5.709,8.569-13.133,7.996-21.131c-0.575-7.997-3.999-15.988-10.279-21.13C738.212,59.88,627.42,18,513.772,18v230.34\r\n\t\t\t\tC569.736,248.34,622.849,266.043,667.966,299.736z\"\r\n      />\r\n    </g>\r\n  </svg>\r\n);\r\n\r\nexport const FacebookSVG = () => (\r\n  <svg viewBox=\"0 0 1024 1024\" width=\"1em\" height=\"1em\" fill=\"currentColor\">\r\n    <g>\r\n      <path\r\n        fill=\"#4A7AFF\"\r\n        d=\"M1015.363,506.525c0,279.749-226.775,506.524-506.525,506.524c-279.749,0-506.524-226.775-506.524-506.524\r\n\tC2.313,226.775,229.089,0,508.838,0C788.588,0,1015.363,226.775,1015.363,506.525z\"\r\n      />\r\n      <path\r\n        fill=\"#FFFFFF\"\r\n        d=\"M663.688,149.015v114.697c0,0-131.686-19.113-131.686,65.843v84.957h118.941L636.08,544.072H532.002v337.709\r\n\tH400.316V544.072l-112.572-2.126V414.512H398.19V316.81c0,0-7.288-145.343,135.938-172.038\r\n\tC593.602,133.68,663.688,149.015,663.688,149.015z\"\r\n      />\r\n      <path\r\n        fill=\"#DCE1EB\"\r\n        d=\"M663.688,263.712V149.015c0,0-70.086-15.335-129.56-4.243c-9.291,1.73-17.932,3.973-25.993,6.623v730.387\r\n\th23.867V544.072h104.07l14.871-129.561H532.002c0,0,0,0,0-84.957C532.002,244.599,663.688,263.712,663.688,263.712z\"\r\n      />\r\n    </g>\r\n  </svg>\r\n);\r\n\r\nexport const TwitterSVG = () => (\r\n  <svg viewBox=\"0 0 1024 1024\" width=\"1em\" height=\"1em\" fill=\"currentColor\">\r\n    <path fill=\"#03A9F4\" d=\"M1006.701,163.276c-6.71-7.344-17.513-9.249-26.334-4.649c-9.059,4.107-18.431,7.508-28.042,10.136\r\n      c14.983-19.171,26.285-40.938,33.356-64.208c3.113-11.713-3.859-23.729-15.573-26.834c-6.251-1.668-12.92-0.484-18.218,3.219\r\n      c-33.365,18.063-68.824,31.936-105.59,41.3c-75.666-71.428-190.939-80.332-276.685-21.372\r\n      c-66.047,44.667-102.419,121.845-94.796,201.207c-143.168-12.197-274.902-83.141-363.884-195.983\r\n      c-4.574-5.527-11.491-8.575-18.653-8.206c-7.262,0.436-13.833,4.443-17.545,10.703c-30.202,49.365-38.951,108.916-24.231,164.878\r\n      c7.548,28.757,20.485,55.813,38.136,79.74c-7.942-3.894-15.434-8.682-22.292-14.268c-9.413-7.632-23.229-6.193-30.86,3.22\r\n      c-3.17,3.909-4.904,8.788-4.912,13.815c1.314,81.186,45.891,155.489,116.917,194.842c-9.586-1.175-19.04-3.204-28.264-6.054\r\n      c-11.607-3.491-23.846,3.088-27.338,14.687c-1.519,5.06-1.166,10.505,1.004,15.326c30.826,69.055,92.447,119.488,166.24,136.039\r\n      c-70.303,39.665-151.25,56.33-231.5,47.657c-10.399-1.323-20.255,5.002-23.385,15.015c-3.228,9.931,0.993,20.765,10.095,25.891\r\n      c98.254,58.384,210.029,90.139,324.3,92.16c109.632-0.403,216.707-33.152,307.808-94.132\r\n      C820.37,681.983,928.769,474.763,913.672,289.359c37.184-27.533,69.439-61.153,95.403-99.446\r\n      C1014.406,181.519,1013.437,170.586,1006.701,163.276z\"/>\r\n  </svg>\r\n)\r\n\r\nexport const ImageSvg = () => (\r\n  <svg viewBox=\"0 0 1024 1024\" width=\"1em\" height=\"1em\" fill=\"currentColor\">\r\n    <g>\r\n      <g>\r\n        <path fill=\"#E5E1E5\" d=\"M163.033,1011.756L2.746,191.353c-4.863-24.879,11.365-48.991,36.245-53.852l124.042-24.234l194.642-42.82\r\n          l279.663,941.308H163.033V1011.756z\"/>\r\n      </g>\r\n      <path fill=\"#99E6FC\" d=\"M163.033,680.979L68.355,196.393l94.678-18.501l143.802-23.615l62.994,584.599L163.033,680.979z\"/>\r\n      <g id=\"XMLID_159_\">\r\n        <g>\r\n          <path fill=\"#F9F7F8\" d=\"M1014.357,64.9v957.461c0,25.351-20.549,45.899-45.899,45.899H208.93\r\n            c-25.351,0-45.901-20.549-45.901-45.899V64.9c0-25.35,20.551-45.9,45.901-45.9h759.528C993.809,19,1014.357,39.551,1014.357,64.9\r\n            z\"/>\r\n        </g>\r\n        <path fill=\"#EFEDEF\" d=\"M574.473,971.206c-90.848,0-164.495-73.646-164.495-164.493V19H208.93\r\n          c-25.351,0-45.901,20.551-45.901,45.9v957.461c0,25.351,20.551,45.899,45.901,45.899h759.528\r\n          c25.351,0,45.899-20.549,45.899-45.899v-51.155H574.473z\"/>\r\n        <path fill=\"#FEC165\" d=\"M950.933,737.554V234.861c0-7.122-5.774-12.896-12.897-12.896H239.354c-7.12,0-12.896,5.774-12.896,12.896\r\n          v502.692H950.933z\"/>\r\n        <path fill=\"#FDB441\" d=\"M409.978,221.965H239.354c-7.12,0-12.896,5.774-12.896,12.896v502.692h183.52V221.965z\"/>\r\n        <circle fill=\"#FEE903\" cx=\"588.693\" cy=\"600.309\" r=\"246.948\"/>\r\n        <path fill=\"#F4D902\" d=\"M409.978,770.729V429.889c-42.274,44.316-68.229,104.339-68.229,170.419\r\n          C341.748,666.391,367.703,726.41,409.978,770.729z\"/>\r\n        <g>\r\n          <path fill=\"#99E6FC\" d=\"M902.813,668.316c-57.591-25.393-122.604-28.267-182.203-8.034l-51.163,17.336\r\n            c-52.369,17.759-109.135,17.759-161.505,0l-51.163-17.336c-59.602-20.232-124.611-17.358-182.182,8.034l-48.142,21.226v105.269\r\n            l80.12,33.354h599.658l44.699-33.354V689.542L902.813,668.316z\"/>\r\n          <path fill=\"#62DBFB\" d=\"M409.978,828.165V649.264c-45.72-6.239-92.605,0.184-135.379,19.053l-48.141,21.226v105.269\r\n            l80.119,33.354H409.978z\"/>\r\n          <path fill=\"#62DBFB\" d=\"M950.933,794.811v61.709c0,5.452-4.424,9.878-9.879,9.878H236.332c-5.453,0-9.877-4.426-9.877-9.878\r\n            v-61.709l48.142-21.229c57.57-25.39,122.58-28.268,182.182-8.055l51.163,17.358c52.37,17.759,109.136,17.759,161.505,0\r\n            l51.163-17.358c59.6-20.213,124.612-17.335,182.203,8.055L950.933,794.811z\"/>\r\n          <path fill=\"#01D0FB\" d=\"M236.332,866.397h184.86c-7.214-18.51-11.215-38.625-11.215-59.685v-52.188\r\n            c-45.72-6.231-92.605,0.192-135.379,19.061l-48.141,21.226v61.71c-0.003,5.451,4.421,9.875,9.874,9.875V866.397z\"/>\r\n        </g>\r\n      </g>\r\n    </g>\r\n  </svg>\r\n)","import React from 'react'\r\nimport Icon from '@ant-design/icons';\r\n\r\nconst CustomIcon = React.forwardRef((props, _) => <Icon component={props.svg} className={props.className}/>)\r\n\r\nexport default CustomIcon\r\n","import { Form, Button, Col, Row, Input, message, Card } from \"antd\";\r\nimport { QuestionCategoryApi } from \"api/catalog-api\";\r\nimport React from \"react\";\r\n\r\nclass QuestionCategoryEdit extends React.Component {\r\n  item = { name: \"\", description: \"\" };\r\n  state = {\r\n    visible: false,\r\n    item: this.props.item ? this.props.item : this.item,\r\n    isLoading: false,\r\n    isLoading1: false,\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    if (this.props.item) {\r\n      QuestionCategoryApi.get(this.props.item.id).then((response) => {\r\n        this.setState({ item: response.data });\r\n      });\r\n    }\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    event.persist();\r\n    const currentItem = Object.assign({}, this.state.item);\r\n    const targetValue =\r\n      event.target.type === \"checkbox\"\r\n        ? event.target.checked\r\n        : event.target.value;\r\n    currentItem[event.target.name] = targetValue;\r\n    this.setState({ item: currentItem });\r\n  };\r\n\r\n  onAdd = (isContinue) => {\r\n    this.setState(\r\n      {\r\n        isLoading: isContinue ? false : true,\r\n        isLoading1: isContinue ? true : false,\r\n      },\r\n      () => {\r\n        let item = this.state.item;\r\n        item.catalogId = this.props.catalogId;\r\n        if (this.props.parent) {\r\n          item.parentId = this.props.parent.id;\r\n        }\r\n        QuestionCategoryApi.save(item).then((response) => {\r\n          this.setState({ isLoading1: false, isLoading: false });\r\n          message.success(\"Cập nhật thành công.\");\r\n          if (this.props.onSaved) {\r\n            this.props.onSaved();\r\n          }\r\n          if (!isContinue) {\r\n            this.props.onClose();\r\n          } else {\r\n            this.setState({ item: this.item });\r\n          }\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card   >\r\n        <Form layout=\"vertical\" hideRequiredMark>\r\n          {this.props.parent && (\r\n            <Row gutter={16}>\r\n              <Col span={24}>\r\n                <Form.Item label=\"Danh mục cha\">\r\n                  <Input\r\n                    defaultValue={this.props.parent.name}\r\n                    value={this.props.parent.name}\r\n                    readOnly\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n          <Row gutter={16}>\r\n            <Col span={24}>\r\n              <Form.Item\r\n                label=\"Tên\"\r\n              >\r\n                <Input\r\n                  placeholder=\"Tên\"\r\n                  name=\"name\"\r\n                  defaultValue={this.state.item.name}\r\n                  value={this.state.item.name}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col span={24}>\r\n              <Form.Item\r\n                label=\"Mô tả\"\r\n              >\r\n                <Input.TextArea\r\n                  name=\"description\"\r\n                  defaultValue={this.state.item.description}\r\n                  value={this.state.item.description}\r\n                  rows={4}\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"Mô tả\"\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col span={24}>\r\n              <Button onClick={this.props.onClose} style={{ marginRight: 8 }}>\r\n                Hủy bỏ\r\n              </Button>\r\n              <Button\r\n                style={{ marginRight: 8 }}\r\n                onClick={() => {\r\n                  this.onAdd(false);\r\n                }}\r\n                loading={this.state.isLoading}\r\n                type=\"primary\"\r\n              >\r\n                Cập nhật\r\n              </Button>\r\n              {this.props.item == null && (\r\n                <Button\r\n                  onClick={() => {\r\n                    this.onAdd(true);\r\n                  }}\r\n                  loading={this.state.isLoading1}\r\n                  type=\"primary\"\r\n                >\r\n                  Cập nhật và Tiếp tục\r\n                </Button>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionCategoryEdit;\r\n","import { Tree, Card, Button, Modal, message, Col, Row } from \"antd\";\r\nimport React from \"react\";\r\nimport { DeleteOutlined, PlusOutlined, EditOutlined } from \"@ant-design/icons\";\r\nimport CategoryEdit from \"./edit\";\r\nimport { QuestionCategoryApi } from \"api/catalog-api\";\r\nimport InnerAppLayout from \"layouts/inner-app-layout\";\r\n\r\nconst { confirm } = Modal;\r\n\r\nclass QuestionCategory extends React.Component {\r\n  state = {\r\n    treeData: [],\r\n    selectedNode: null,\r\n    hasChanged: false,\r\n    onEditing: false,\r\n    item: null,\r\n    parent: null,\r\n  };\r\n\r\n  fetchData = () => {\r\n    QuestionCategoryApi.getCategoriesByCatalogId(\r\n      this.props.match.params.catalogId\r\n    ).then((response) => {\r\n      this.setState({ selectedNode: null, treeData: response.data });\r\n    });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.fetchData();\r\n  };\r\n\r\n  onSaved = () => {\r\n    this.setState({ hasChanged: true });\r\n  };\r\n\r\n  add = () => {\r\n    this.setState({\r\n      parent: null,\r\n      onEditing: true,\r\n    });\r\n  };\r\n\r\n  addChild = () => {\r\n    this.setState({\r\n      onEditing: true,\r\n      parent: {\r\n        id: this.state.selectedNode.key,\r\n        name: this.state.selectedNode.title,\r\n      },\r\n      item: null,\r\n    });\r\n  };\r\n\r\n  edit = () => {\r\n    this.setState({\r\n      item: { id: this.state.selectedNode.key },\r\n      onEditing: true,\r\n    });\r\n  };\r\n\r\n  closeAddOrEdit = () => {\r\n    this.setState({ onEditing: false });\r\n    if (this.state.hasChanged) {\r\n      this.fetchData();\r\n    }\r\n  };\r\n\r\n  onSelect = (selectedKeys, info) => {\r\n    if (info.selectedNodes.length > 0) {\r\n      this.setState({ onEditing: true, selectedNode: info.selectedNodes[0] });\r\n    } else {\r\n      this.setState({ selectedNode: null, item: null });\r\n    }\r\n  };\r\n\r\n  delete = (fetchData) => {\r\n    var item = { id: this.state.selectedNode.key };\r\n    // var refresh = this.fetchData();\r\n    confirm({\r\n      title: \"Xác nhận\",\r\n      content: \"Bạn có chắc chắn muốn xóa?\",\r\n      okText: \"Đồng ý\",\r\n      okType: \"danger\",\r\n      cancelText: \"Hủy bỏ\",\r\n      onOk() {\r\n        QuestionCategoryApi.delete(item).then((response) => {\r\n          message.success(\"Xóa thành công.\");\r\n          fetchData();\r\n        });\r\n      },\r\n      onCancel() {},\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"my-4 container-fluid\">\r\n          <Row gutter={16}>\r\n            <Col span={24} alignItems=\"right\" flex={\"flex-end\"}>\r\n              <InnerAppLayout\r\n                sideContent={\r\n                  <div className=\"w-100\">\r\n                    {this.state.treeData && this.state.treeData.length > 0 && (\r\n                      <Tree\r\n                        showIcon\r\n                        autoExpandParent={true}\r\n                        defaultExpandAll={true}\r\n                        className=\"draggable-tree\"\r\n                        draggable={false}\r\n                        blockNode\r\n                        onSelect={this.onSelect}\r\n                        treeData={this.state.treeData}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                }\r\n                mainContent={\r\n                  <div className=\"p-4\">\r\n                    <div className=\"container-fluid\">\r\n                      <Row gutter={16}>\r\n                        <Col span={24}>\r\n                          <Button\r\n                            type=\"default\"\r\n                            size=\"small\"\r\n                            onClick={() => this.add()}\r\n                            icon={<PlusOutlined />}\r\n                          >\r\n                            Thêm mới\r\n                          </Button>\r\n                          &nbsp;\r\n                          <Button\r\n                            type=\"default\"\r\n                            size=\"small\"\r\n                            onClick={() => this.addChild()}\r\n                            icon={<PlusOutlined />}\r\n                            disabled={this.state.selectedNode == null}\r\n                          >\r\n                            Thêm mới con\r\n                          </Button>\r\n                          &nbsp;\r\n                          <Button\r\n                            type=\"default\"\r\n                            onClick={this.edit}\r\n                            size=\"small\"\r\n                            icon={<EditOutlined />}\r\n                            disabled={this.state.selectedNode == null}\r\n                          >\r\n                            Sửa\r\n                          </Button>\r\n                          &nbsp;\r\n                          <Button\r\n                            type=\"default\"\r\n                            icon={<DeleteOutlined />}\r\n                            danger\r\n                            size=\"small\"\r\n                            onClick={() => {\r\n                              this.delete(() => this.fetchData());\r\n                            }}\r\n                            disabled={this.state.selectedNode == null}\r\n                          >\r\n                            Xóa\r\n                          </Button>\r\n                        </Col>\r\n                      </Row>\r\n                      <br />\r\n                      {this.state.onEditing && (\r\n                        <CategoryEdit\r\n                          catalogId={this.props.match.params.catalogId}\r\n                          key={this.state.item.id}\r\n                          parent={this.state.parent}\r\n                          item={this.state.item}\r\n                          onSaved={this.onSaved}\r\n                          onClose={this.closeAddOrEdit}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                }\r\n                sideContentWidth={500}\r\n                sideContentGutter={false}\r\n                border\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionCategory;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  Pagination,\r\n  Form,\r\n  Tabs,\r\n  Col,\r\n  Row,\r\n  Dropdown,\r\n  Select,\r\n  Input,\r\n  Modal,\r\n  message,\r\n  Button,\r\n  Menu,\r\n} from \"antd\";\r\nimport {\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  PlusCircleOutlined,\r\n  DownOutlined,\r\n} from \"@ant-design/icons\";\r\nimport EllipsisDropdown from \"components/shared-components/EllipsisDropdown\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport PageHeaderAlt from \"components/layout-components/PageHeaderAlt\";\r\nimport QuestionApi from \"api/question-api\";\r\nimport QuestionCatalogApi from \"api/question-catalog-api\";\r\nimport QuestionCategory from \"views/app-views/questioncategory\";\r\nimport { QuestionCategoryApi } from \"api/catalog-api\";\r\nimport moment from \"moment\";\r\nimport { TreeSelect } from \"antd\";\r\n\r\nconst { TabPane } = Tabs;\r\nconst { Option } = Select;\r\nconst { Search } = Input;\r\nconst { confirm } = Modal;\r\n\r\nconst QuestionList = (props) => {\r\n  let history = useHistory();\r\n  const [questionTypes, setQuestionTypes] = useState(null);\r\n  const [catalog, setCatalog] = useState(null);\r\n  const [data, setData] = useState(null);\r\n  const [categories, setCategories] = useState(null);\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [categoryId, setCategoryId] = useState(0);\r\n  const [questionType, setQuestionType] = useState(0);\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  const dropdownMenu = (row) => (\r\n    <Menu>\r\n      <Menu.Item onClick={() => editQuestion(row)} key={`menu-question-edit`}>\r\n        <Flex alignItems=\"center\">\r\n          <EditOutlined />\r\n          <span className=\"ml-2\">Sửa</span>\r\n        </Flex>\r\n      </Menu.Item>\r\n      <Menu.Divider />\r\n      <Menu.Item\r\n        onClick={() => deleteQuestion(row)}\r\n        danger\r\n        key={`menu-question-delete`}\r\n      >\r\n        <Flex alignItems=\"center\">\r\n          <DeleteOutlined />\r\n          <span className=\"ml-2\">Xóa</span>\r\n        </Flex>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  const gerenateCreateQuetionButton = () => {\r\n    return (\r\n      <Menu>\r\n        {questionTypes.map((item) => (\r\n          <Menu.Item\r\n            key={`menu-question-type-${item.id}`}\r\n            onClick={() => {\r\n              addQuestion(item.id);\r\n            }}\r\n          >\r\n            {item.name}\r\n          </Menu.Item>\r\n        ))}\r\n      </Menu>\r\n    );\r\n  };\r\n\r\n  const deleteQuestion = (row) => {\r\n    confirm({\r\n      title: \"Xác nhận\",\r\n      content: \"Bạn có chắc chắn muốn xóa?\",\r\n      okText: \"Đồng ý\",\r\n      okType: \"danger\",\r\n      cancelText: \"Hủy bỏ\",\r\n      onOk() {\r\n        new QuestionApi().delete(row).then((response) => {\r\n          message.success(\"Xóa thành công.\");\r\n          searchQuestion();\r\n        });\r\n      },\r\n      onCancel() { },\r\n    });\r\n  };\r\n\r\n  const addQuestion = (typeCode) => {\r\n    history.push(\r\n      `/lms/modules/mystudies/exams/questioncatalogs/questions/add/${typeCode}/${props.match.params.catalogId}`\r\n    );\r\n  };\r\n\r\n  const editQuestion = (row) => {\r\n    history.push(\r\n      `/lms/modules/mystudies/exams/questioncatalogs/questions/edit/${row.id}/${props.match.params.catalogId}`\r\n    );\r\n  };\r\n\r\n  const getQuestionCategories = () => {\r\n    QuestionCategoryApi.getCategoriesByCatalogId(props.match.params.catalogId).then(\r\n      (response) => {\r\n        setCategories(response.data);\r\n      }\r\n    );\r\n  };\r\n\r\n  const getQuestionCatalog = () => {\r\n    new QuestionCatalogApi()\r\n      .get(props.match.params.catalogId)\r\n      .then((response) => {\r\n        setCatalog(response.data);\r\n      });\r\n  };\r\n\r\n  const getAllQuestionTypes = () => {\r\n    var questionApi = new QuestionApi();\r\n    questionApi.getQuestionTypes().then((response) => {\r\n      setQuestionTypes(response.data);\r\n    });\r\n  };\r\n\r\n  const searchQuestion = () => {\r\n    var questionApi = new QuestionApi();\r\n    questionApi\r\n      .searches({\r\n        catalogId: props.match.params.catalogId,\r\n        questionType: questionType,\r\n        categoryId: categoryId,\r\n        keyword: keyword,\r\n        page: page,\r\n      })\r\n      .then((response) => {\r\n        setData(response.data.value);\r\n        setTotalItems(response.data.totalItems);\r\n      });\r\n  };\r\n\r\n  const pageChanged = (page, pageSize) => {\r\n    setPage(page);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllQuestionTypes();\r\n    getQuestionCatalog();\r\n    getQuestionCategories();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    searchQuestion();\r\n  }, [questionType, keyword, categoryId, page]);\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        layout=\"vertical\"\r\n        name=\"advanced_search\"\r\n        className=\"ant-advanced-search-form\"\r\n      >\r\n        <PageHeaderAlt className=\"border-bottom\" overlap>\r\n          <div className=\"container\">\r\n            <Flex\r\n              className=\"py-2\"\r\n              mobileFlex={false}\r\n              justifyContent=\"between\"\r\n              alignItems=\"center\"\r\n            >\r\n              {catalog && <h4 className=\"mb-3\">{catalog.name} </h4>}\r\n              <div className=\"mb-3\">\r\n                {/* <Button className=\"mr-2\">Hủy bỏ</Button>\r\n                <Button type=\"primary\">{`Cập nhật`}</Button> */}\r\n              </div>\r\n            </Flex>\r\n          </div>\r\n        </PageHeaderAlt>\r\n        <div className=\"container\">\r\n          <Tabs\r\n            defaultActiveKey=\"questions\"\r\n            style={{ marginTop: 30 }}\r\n            activeKey={\r\n              props.match.params.tab ? props.match.params.tab : \"questions\"\r\n            }\r\n            onChange={(key) => {\r\n              history.push(\r\n                `/lms/modules/mystudies/exams/questioncatalogs/questions/list/${props.match.params.catalogId}/${key}`\r\n              );\r\n            }}\r\n          >\r\n            <TabPane tab=\"Ngân hàng Câu hỏi\" key=\"questions\">\r\n              <Card>\r\n                <Row gutter={16}>\r\n                  <Col span={6}>\r\n                    <Search\r\n                      block\r\n                      placeholder=\"Tìm kiếm\"\r\n                      onSearch={(value) => setKeyword(value)}\r\n                    />\r\n                  </Col>\r\n                  <Col span={6}>\r\n                    {questionTypes && (\r\n                      <Select\r\n                        value={questionType}\r\n                        block\r\n                        style={{ width: 200 }}\r\n                        placeholder=\"Loại câu hỏi\"\r\n                        onChange={(value) => setQuestionType(parseInt(value))}\r\n                      >\r\n                        <Option key={`question-type-0`} value={0}>\r\n                          Tất cả loại\r\n                        </Option>\r\n                        {questionTypes.map((item) => (\r\n                          <Option\r\n                            key={`question-type-${item.id}`}\r\n                            value={item.id}\r\n                          >\r\n                            {item.name}\r\n                          </Option>\r\n                        ))}\r\n                      </Select>\r\n                    )}\r\n                  </Col>\r\n                  <Col span={6}>\r\n                    {categories && (\r\n                      <TreeSelect\r\n                        treeData={categories}\r\n                        onClear={() => setCategoryId(0)}\r\n                        dropdownStyle={{ maxHeight: 400, overflow: \"auto\" }}\r\n                        placeholder=\"Chọn Danh mục câu hỏi\"\r\n                        allowClear\r\n                        block\r\n                        treeDefaultExpandAll\r\n                        onChange={(value) => setCategoryId(parseInt(value))}\r\n                      ></TreeSelect>\r\n                    )}\r\n                  </Col>\r\n                  <Col span={6} style={{ textAlign: 'right' }}>\r\n                    {questionTypes && (\r\n                      <Dropdown overlay={gerenateCreateQuetionButton} >\r\n                        <Button\r\n                          type=\"primary\"\r\n                          icon={<PlusCircleOutlined />}\r\n\r\n                        >\r\n                          Thêm mới <DownOutlined />\r\n                        </Button>\r\n                      </Dropdown>\r\n                    )}\r\n                  </Col>\r\n                </Row>\r\n                <Row gutter={16}>\r\n                  <Col span={24}>\r\n                    <div className=\"table-responsive\">\r\n                      <div className=\"ant-table\">\r\n                        <div className=\"ant-table-container\">\r\n                          <div className=\"ant-table-content\">\r\n                            <table>\r\n                              <thead className=\"ant-table-thead\">\r\n                                <tr>\r\n                                  <th\r\n                                    className=\"ant-table-cell\"\r\n                                    style={{ width: 25 }}\r\n                                  >\r\n                                    #\r\n                                  </th>\r\n                                  <th style={{ width: 220 }}>Nội dung</th>\r\n                                  <th\r\n                                    className=\"ant-table-cell\"\r\n                                    style={{ width: 180 }}\r\n                                  >\r\n                                    Loại câu hỏi\r\n                                  </th>\r\n                                  <th\r\n                                    className=\"ant-table-cell\"\r\n                                    style={{ width: 210 }}\r\n                                  >\r\n                                    Danh mục\r\n                                  </th>\r\n                                  <th\r\n                                    className=\"ant-table-cell\"\r\n                                    style={{ width: 90 }}\r\n                                  >\r\n                                    Ngày tạo\r\n                                  </th>\r\n                                  <th\r\n                                    className=\"ant-table-cell\"\r\n                                    style={{ width: 60 }}\r\n                                  ></th>\r\n                                </tr>\r\n                              </thead>\r\n                              <tbody className=\"ant-table-tbody\">\r\n                                {data &&\r\n                                  data.map((question, index) => {\r\n                                    return (\r\n                                      <tr\r\n                                        className=\"ant-table-row\"\r\n                                        key={`tr-ans-question-${question.id}`}\r\n                                      >\r\n                                        <td className=\"ant-table-cell \">\r\n                                          {index + 1}\r\n                                        </td>\r\n                                        <td className=\"ant-table-cell \">\r\n                                          <Link\r\n                                            to={`/lms/modules/mystudies/exams/questioncatalogs/questions/edit/${question.id}/${props.match.params.catalogId}`}\r\n                                          >\r\n                                            {question.shortContent}\r\n                                          </Link>\r\n                                        </td>\r\n                                        <td className=\"ant-table-cell \">\r\n                                          {question.questionTypeName}\r\n                                          {question.questionType == 3 && (\r\n                                            <p>\r\n                                              {question.totalQuestion} câu hỏi\r\n                                              con\r\n                                            </p>\r\n                                          )}\r\n                                        </td>\r\n                                        <td className=\"ant-table-cell \">\r\n                                          {question.categoryName}\r\n                                        </td>\r\n                                        <td className=\"ant-table-cell \">\r\n                                          {moment(question.createdTime).format(\r\n                                            \"YYYY-MM-DD\"\r\n                                          )}\r\n                                        </td>\r\n                                        <td className=\"ant-table-cell \">\r\n                                          <div className=\"text-right\">\r\n                                            <EllipsisDropdown\r\n                                              menu={dropdownMenu(question)}\r\n                                            />\r\n                                          </div>\r\n                                        </td>\r\n                                      </tr>\r\n                                    );\r\n                                  })}\r\n                              </tbody>\r\n                            </table>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <Row gutter={16}>\r\n                  <Col span={24} alignItems=\"right\" flex={\"flex-end\"}>\r\n                    <Pagination\r\n                      showSizeChanger={false}\r\n                      className=\"ant-table-pagination-right ant-table-pagination\"\r\n                      total={totalItems}\r\n                      defaultCurrent={page}\r\n                      onChange={pageChanged}\r\n                      pageSize={20}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </Card>\r\n            </TabPane>\r\n            <TabPane tab=\"Danh mục Câu hỏi\" key=\"categories\">\r\n              <Row gutter={16}>\r\n                <Col span={24} alignItems=\"right\" flex={\"flex-end\"}>\r\n                  <QuestionCategory {...props} />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n          </Tabs>\r\n        </div>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuestionList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Radio, Divider, Input, Form, Checkbox, Button } from \"antd\";\r\nimport { MinusCircleOutlined } from \"@ant-design/icons\";\r\nimport { QuestionType } from \"types/QuestionType\";\r\n\r\nconst rules = {\r\n  content: [\r\n    {\r\n      required: true,\r\n      message: \"Nhập vào nội dung câu hỏi\",\r\n    },\r\n  ],\r\n  price: [\r\n    {\r\n      required: true,\r\n      message: \"Please enter product price\",\r\n    },\r\n  ],\r\n  comparePrice: [],\r\n  taxRate: [\r\n    {\r\n      required: true,\r\n      message: \"Please enter tax rate\",\r\n    },\r\n  ],\r\n  cost: [\r\n    {\r\n      required: true,\r\n      message: \"Please enter item cost\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst Answers = (props) => {\r\n  const [item, setItem] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setItem(props.item);\r\n  }, [props.item]);\r\n\r\n  const removeAnswer = (id) => {\r\n    let answers = [...item.answers];\r\n    answers = answers.filter((x) => x.id !== id);\r\n    item.answers = answers;\r\n    // setItem(item);\r\n    if (props.handleChange) {\r\n      props.handleChange({ ...item });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"ant-table\">\r\n      <div className=\"ant-table-container\">\r\n        <div className=\"ant-table-content\">\r\n          <table>\r\n            <thead className=\"ant-table-thead\">\r\n              <tr>\r\n                <th className=\"ant-table-cell\" style={{ width: 25 }}>\r\n                  #\r\n                </th>\r\n                <th className=\"ant-table-cell\" style={{ width: 120 }}>\r\n                  Đáp án đúng\r\n                </th>\r\n                <th className=\"ant-table-cell\"> Nội dung</th>\r\n                <th className=\"ant-table-cell\" style={{ width: 60 }}></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"ant-table-tbody\">\r\n              {item &&\r\n                item.answers.map((anwser, index) => {\r\n                  return (\r\n                    <tr\r\n                      className=\"ant-table-row\"\r\n                      key={`tr-ans-answer-${anwser.id}`}\r\n                    >\r\n                      <td className=\"ant-table-cell \">{index + 1}</td>\r\n                      <td className=\"ant-table-cell \">\r\n                        {(item.questionTypeId === QuestionType.SC ||\r\n                          item.questionTypeId === QuestionType.TF) && (\r\n                          <Radio\r\n                            checked={anwser.isCorrect}\r\n                            value={anwser.isCorrect}\r\n                            name={`rdb-ans-content-${anwser.id}`}\r\n                            onChange={(event) => {\r\n                              item.answers.map((x) => {\r\n                                x.isCorrect = false;\r\n                              });\r\n                              anwser.isCorrect = event.target.checked;\r\n                              item.answers[index] = anwser;\r\n                              setItem({ ...item });\r\n                              if (props.handleChange) {\r\n                                props.handleChange({ ...item });\r\n                              }\r\n                            }}\r\n                          />\r\n                        )}\r\n                        {props.item?.questionTypeId === QuestionType.MC && (\r\n                          <Checkbox\r\n                            checked={anwser.isCorrect}\r\n                            value={anwser.isCorrect}\r\n                            name={`chk-ans-content-${anwser.id}`}\r\n                            onChange={(event) => {\r\n                              anwser.isCorrect = event.target.checked;\r\n                              item.answers[index] = anwser;\r\n                              setItem({ ...item });\r\n                              if (props.handleChange) {\r\n                                props.handleChange({ ...item });\r\n                              }\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </td>\r\n                      <td className=\"ant-table-cell \">\r\n                        <Form.Item\r\n                          label=\"\"\r\n                          rules={rules.name}\r\n                          id={`fi-ans-content-${anwser.id}`}\r\n                          name={`txt-ans-content-${anwser.id}`}\r\n                          key={`fi-ans-content-${anwser.id}`}\r\n                        >\r\n                          <Input.TextArea\r\n                            value={anwser.content}\r\n                            defaultValue={anwser.content}\r\n                            key={`txt-ans-content-${anwser.id}`}\r\n                            id={`txt-ans-content-${anwser.id}`}\r\n                            name={`txt-ans-content-${anwser.id}`}\r\n                            onChange={(event) => {\r\n                              anwser.content = event.target.value;\r\n                              setItem(item);\r\n                              if (props.handleChange) {\r\n                                props.handleChange(item);\r\n                              }\r\n                            }}\r\n                            rows={3}\r\n                          />\r\n                        </Form.Item>\r\n                      </td>\r\n                      <td className=\"ant-table-cell \">\r\n                        {item.questionTypeId !== QuestionType.TF && (\r\n                          <MinusCircleOutlined\r\n                            onClick={() => removeAnswer(anwser.id)}\r\n                          />\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Answers;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Select,\r\n  Collapse,\r\n  Modal,\r\n  Radio,\r\n  Input,\r\n  Button,\r\n  message,\r\n  Drawer,\r\n} from \"antd\";\r\nimport QuestionApi from \"api/question-api\";\r\n\r\nconst { Option } = Select;\r\nconst { confirm } = Modal;\r\nconst { Panel } = Collapse;\r\n\r\nconst FillTheBlankEditor = (props) => {\r\n  const [question, setQuestion] = useState(null);\r\n  const [setting, setSetting] = useState({\r\n    renderAs: 1,\r\n    caseInsensitiveMask: 0,\r\n  });\r\n\r\n  const onChangeRadioControl = (e, name) => {\r\n    var newValue = parseInt(e.target.value, 10);\r\n    let newSetting = { ...setting };\r\n    newSetting[name] = newValue;\r\n    setSetting(newSetting);\r\n  };\r\n\r\n  const saveSetting = () => {\r\n    let question = props.question;\r\n    question.settingJSON = JSON.stringify(setting);\r\n    new QuestionApi().saveSetting(question).then((response) => {\r\n      setQuestion(response.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    new QuestionApi()\r\n      .parseFillTheBlankQuestion(props.question)\r\n      .then((response) => {\r\n        setQuestion(response.data);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Drawer\r\n      title={\"Soạn thảo câu hỏi điền vào chỗ trống\"}\r\n      width={820}\r\n      onClose={props.onClose}\r\n      closable={true}\r\n      visible={true}\r\n      bodyStyle={{ paddingBottom: 80 }}\r\n      footer={\r\n        <div\r\n          style={{\r\n            textAlign: \"right\",\r\n          }}\r\n        >\r\n          <Button\r\n            onClick={saveSetting}\r\n            type=\"primary\"\r\n            color=\"primary\"\r\n            style={{ marginRight: 8 }}\r\n          >\r\n            Cập nhật\r\n          </Button>\r\n          &nbsp;\r\n          <Button onClick={props.onClose} style={{ marginRight: 8 }}>\r\n            Đóng\r\n          </Button>\r\n        </div>\r\n      }\r\n    >\r\n      {question && (\r\n        <Form layout=\"vertical\">\r\n          <Row gutter={0}>\r\n            <Col span={24} style={{ padding: 5 }}>\r\n              <Collapse defaultActiveKey={[\"1\"]}>\r\n                <Panel header=\"Nội dung câu hỏi\" key=\"1\">\r\n                  {question.previewContent}\r\n                </Panel>\r\n              </Collapse>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={0}>\r\n            <Col span={12} style={{ padding: 5 }}>\r\n              <Form.Item label=\"Cấu hình hiển thị câu hỏi\">\r\n                <Radio.Group\r\n                  value={setting.renderAs}\r\n                  defaultValue={setting.renderAs}\r\n                  onChange={(e) => onChangeRadioControl(e, \"renderAs\")}\r\n                >\r\n                  <Radio.Button value={1}>Textbox</Radio.Button>\r\n                  <Radio.Button value={2}>Dropdonwlist</Radio.Button>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={0}>\r\n            <Col span={24} style={{ padding: 5 }}>\r\n              <Form.Item label=\"Cấu hình chấm điểm\">\r\n                <Radio.Group\r\n                  value={setting.caseInsensitiveMask}\r\n                  defaultValue={setting.caseInsensitiveMask}\r\n                  onChange={(e) =>\r\n                    onChangeRadioControl(e, \"caseInsensitiveMask\")\r\n                  }\r\n                >\r\n                  <Radio.Button value={0}>Đúng chính xác</Radio.Button>\r\n                  <Radio.Button value={1}>\r\n                    Không phân biệt chữ in, thường\r\n                  </Radio.Button>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={0}>\r\n            <Col span={24} style={{ padding: 5 }}>\r\n              <div className=\"table-responsive\">\r\n                <div className=\"ant-table\">\r\n                  <div className=\"ant-table-container\">\r\n                    <div className=\"ant-table-content\">\r\n                      <table>\r\n                        <thead className=\"ant-table-thead\">\r\n                          <tr>\r\n                            <th\r\n                              className=\"ant-table-cell\"\r\n                              style={{ width: 120 }}\r\n                            >\r\n                              Câu hỏi\r\n                            </th>\r\n                            <th className=\"ant-table-cell\">Đáp án đúng</th>\r\n                            <th\r\n                              className=\"ant-table-cell\"\r\n                              style={{ width: 250 }}\r\n                            >\r\n                              Đáp án sai\r\n                            </th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody className=\"ant-table-tbody\">\r\n                          {question.children\r\n                            .filter((x) => x.questionTypeId != 7)\r\n                            .map((question, index) => {\r\n                              return (\r\n                                <tr\r\n                                  className=\"ant-table-row\"\r\n                                  key={`tr-ans-question-${question.id}`}\r\n                                >\r\n                                  <td className=\"ant-table-cell \">\r\n                                    Câu {index + 1}\r\n                                  </td>\r\n                                  {setting.renderAs == 1 && (\r\n                                    <td className=\"ant-table-cell \">\r\n                                      <Input value={question.content} />\r\n                                    </td>\r\n                                  )}\r\n                                  {setting.renderAs == 2 && (\r\n                                    <td className=\"ant-table-cell \">\r\n                                      <Select className=\"w-100\">\r\n                                        {question.answers.map((item) => (\r\n                                          <Option\r\n                                            value={item.id}\r\n                                            key={`answer-${item.id}`}\r\n                                          >\r\n                                            {item.content}\r\n                                          </Option>\r\n                                        ))}\r\n                                      </Select>\r\n                                    </td>\r\n                                  )}\r\n                                  <td className=\"ant-table-cell \">\r\n                                    {question.answers\r\n                                      .filter((x) => x.isCorrect == false)\r\n                                      .map((item) => (\r\n                                        <span>{item.content};&nbsp;</span>\r\n                                      ))}\r\n                                  </td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      )}\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default FillTheBlankEditor;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Radio,\r\n  Upload,\r\n  TreeSelect,\r\n  message,\r\n  Button,\r\n} from \"antd\";\r\nimport { ImageSvg } from \"assets/svg/icon\";\r\nimport CustomIcon from \"components/util-components/CustomIcon\";\r\nimport {\r\n  LoadingOutlined,\r\n  PlusOutlined,\r\n  SettingOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Answers from \"./Answers\";\r\nimport { QuestionType } from \"types/QuestionType\";\r\nimport QuestionApi from \"api/question-api\";\r\nimport { QuestionCategoryApi } from \"api/catalog-api\";\r\nimport CkEditor from \"views/app-views/shared/ckeditor\";\r\nimport FillTheBlankEditor from \"./Editor/FillTheBlank\";\r\n\r\nconst { Dragger } = Upload;\r\nconst { TextArea } = Input;\r\n\r\nconst rules = {\r\n  content: [\r\n    {\r\n      required: true,\r\n      message: \"Nhập vào nội dung câu hỏi\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst GeneralField = (props) => {\r\n  const [item, setItem] = useState(null);\r\n  const [categories, setCategories] = useState(null);\r\n  const [openFBEditor, setOpenFBEditor] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setItem(props.item);\r\n    getQuestionCategories();\r\n  }, [props.item]);\r\n\r\n  const getQuestionCategories = () => {\r\n    QuestionCategoryApi.getCategoriesByCatalogId(props.item.catalogId).then(\r\n      (response) => {\r\n        setCategories(response.data);\r\n      }\r\n    );\r\n  };\r\n\r\n  const changeCategoryId = (value) => {\r\n    const currentItem = Object.assign({}, item);\r\n    currentItem.categoryId = parseInt(value);\r\n    setItem({ ...currentItem });\r\n    if (props.handleChange) {\r\n      props.handleChange({ ...currentItem });\r\n    }\r\n  };\r\n\r\n  const addAnswer = () => {\r\n    var newAnswer = new QuestionApi().createAnswer(\r\n      -(item.answers.length + 1),\r\n      item.answers.length + 1,\r\n      \"\",\r\n      false\r\n    );\r\n    item.answers.push(newAnswer);\r\n    setItem({ ...item });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {item && (\r\n        <Row gutter={16}>\r\n          <Col xs={24} sm={24} md={17}>\r\n            <Card title=\"Câu hỏi\">\r\n              <Form.Item label=\"Loại câu hỏi\" rules={rules.name}>\r\n                <Radio.Group defaultValue=\"a\" size=\"medium\">\r\n                  <Radio.Button value=\"a\">\r\n                    {props.item.questionTypeName}\r\n                  </Radio.Button>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n              {item && item.questionTypeId !== QuestionType.FB && (\r\n                <Form.Item label=\"Nội dung\" rules={rules.name}>\r\n                  <CkEditor\r\n                    data={item.content}\r\n                    onChange={(data) => {\r\n                      const currentItem = Object.assign({}, item);\r\n                      currentItem.content = data;\r\n                      setItem({ ...currentItem });\r\n                      if (props.handleChange) {\r\n                        props.handleChange({ ...currentItem });\r\n                      }\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n              )}\r\n              {item && item.questionTypeId === QuestionType.FB && (\r\n                <>\r\n                  <Form.Item label=\"Nội dung\">\r\n                    <TextArea\r\n                      name=\"content\"\r\n                      onChange={(event) => {\r\n                        const currentItem = Object.assign({}, item);\r\n                        currentItem.content = event.target.value;\r\n                        setItem({ ...currentItem });\r\n                        if (props.handleChange) {\r\n                          props.handleChange({ ...currentItem });\r\n                        }\r\n                      }}\r\n                      rows={6}\r\n                      value={item.content}\r\n                    />\r\n                  </Form.Item>\r\n                  <Form.Item>\r\n                    <p className=\"text-muted\">\r\n                      Định dạng [Trả lời 1; Trả lời 2;~Trả lời 3], sử dụng ~\r\n                      trước đáp án để đánh dấu là đáp án sai.\r\n                    </p>\r\n                  </Form.Item>\r\n                  <Form.Item>\r\n                    <Button\r\n                      onClick={() => {\r\n                        setOpenFBEditor(true);\r\n                      }}\r\n                      className=\"w-100\"\r\n                    >\r\n                      <SettingOutlined /> Cấu hình nâng cao\r\n                    </Button>\r\n                  </Form.Item>\r\n                </>\r\n              )}\r\n            </Card>\r\n            {item &&\r\n              item.questionTypeId !== QuestionType.SA &&\r\n              item.questionTypeId !== QuestionType.FB &&\r\n              item.questionTypeId !== QuestionType.GQ && (\r\n                <Card title=\"Đáp án\">\r\n                  <Answers\r\n                    handleChange={props.handleChange}\r\n                    key={\"question-child-anws\"}\r\n                    item={item}\r\n                  />\r\n                  {item.questionTypeId !== QuestionType.TF && (\r\n                    <>\r\n                      <br />\r\n                      <Form.Item>\r\n                        <Button\r\n                          type=\"dashed\"\r\n                          onClick={() => {\r\n                            addAnswer();\r\n                          }}\r\n                          className=\"w-100\"\r\n                        >\r\n                          <PlusOutlined /> Thêm Đáp án\r\n                        </Button>\r\n                      </Form.Item>\r\n                    </>\r\n                  )}\r\n                </Card>\r\n              )}\r\n          </Col>\r\n          <Col xs={24} sm={24} md={7}>\r\n            <Card title=\"File đính kèm\">\r\n              <Dragger onChange={(e) => props.handleUploadChange(e)}>\r\n                {props.uploadedImg ? (\r\n                  <img\r\n                    src={props.uploadedImg}\r\n                    alt=\"avatar\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                ) : (\r\n                  <div>\r\n                    {props.uploadLoading ? (\r\n                      <div>\r\n                        <LoadingOutlined className=\"font-size-xxl text-primary\" />\r\n                        <div className=\"mt-3\">Uploading</div>\r\n                      </div>\r\n                    ) : (\r\n                      <div>\r\n                        <CustomIcon className=\"display-3\" svg={ImageSvg} />\r\n                        <p>Click or drag file to upload</p>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </Dragger>\r\n            </Card>\r\n            {props.item.parentId == 0 && (\r\n              <Card title=\"Phân loại\">\r\n                <Form.Item name=\"category\" label=\"Danh mục câu hỏi\">\r\n                  {categories && (\r\n                    <TreeSelect\r\n                      style={{ width: \"100%\" }}\r\n                      treeData={categories}\r\n                      className=\"w-100\"\r\n                      dropdownStyle={{ maxHeight: 400, overflow: \"auto\" }}\r\n                      placeholder=\"Chọn Danh mục câu hỏi\"\r\n                      allowClear\r\n                      defaultValue={[props.item.categoryName]}\r\n                      treeDefaultExpandAll\r\n                      onChange={(value) => changeCategoryId(value)}\r\n                    ></TreeSelect>\r\n                  )}\r\n                </Form.Item>\r\n              </Card>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      {openFBEditor && (\r\n        <FillTheBlankEditor\r\n          question={item}\r\n          // onOK={this.onQuestionSelected}\r\n          onClose={() => {\r\n            setOpenFBEditor(false);\r\n          }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GeneralField;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  Pagination,\r\n  Form,\r\n  Tabs,\r\n  Col,\r\n  Row,\r\n  Dropdown,\r\n  Select,\r\n  Input,\r\n  Modal,\r\n  message,\r\n  Button,\r\n  Menu,\r\n} from \"antd\";\r\nimport {\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  SearchOutlined,\r\n  PlusCircleOutlined,\r\n  DownOutlined,\r\n} from \"@ant-design/icons\";\r\nimport EllipsisDropdown from \"components/shared-components/EllipsisDropdown\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport PageHeaderAlt from \"components/layout-components/PageHeaderAlt\";\r\nimport QuestionApi from \"api/question-api\";\r\nimport QuestionCatalogApi from \"api/question-catalog-api\";\r\nimport QuestionCategory from \"views/app-views/questioncategory\";\r\nimport { QuestionCategoryApi } from \"api/catalog-api\";\r\nimport moment from \"moment\";\r\nimport { TreeSelect } from \"antd\";\r\nimport { PlusOutlined, MinusCircleOutlined } from \"@ant-design/icons\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nconst { TabPane } = Tabs;\r\nconst { Option } = Select;\r\nconst { confirm } = Modal;\r\n\r\nconst ChildrenQuestions = ({ props, parent }) => {\r\n  let history = useHistory();\r\n  const [questionTypes, setQuestionTypes] = useState(null);\r\n  const [data, setData] = useState(null);\r\n  const [parentQuesion, setParentQuestion] = useState(null);\r\n  // const { param } = props;\r\n\r\n  const dropdownMenu = (row) => (\r\n    <Menu>\r\n      <Menu.Item onClick={() => editQuestion(row)} key={1}>\r\n        <Flex alignItems=\"center\">\r\n          <EditOutlined />\r\n          <span className=\"ml-2\">Sửa</span>\r\n        </Flex>\r\n      </Menu.Item>\r\n      <Menu.Divider />\r\n      <Menu.Item onClick={() => deleteQuestion(row)} danger key={2}>\r\n        <Flex alignItems=\"center\">\r\n          <DeleteOutlined />\r\n          <span className=\"ml-2\">Xóa</span>\r\n        </Flex>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  const gerenateCreateQuetionButton = () => {\r\n    return (\r\n      <Menu>\r\n        {questionTypes.map((item) => (\r\n          <Menu.Item\r\n            key={`menu-question-type-${item.id}`}\r\n            onClick={() => {\r\n              addQuestion(item.id);\r\n            }}\r\n          >\r\n            {item.name}\r\n          </Menu.Item>\r\n        ))}\r\n      </Menu>\r\n    );\r\n  };\r\n\r\n  const deleteQuestion = (row) => {\r\n    confirm({\r\n      title: \"Xác nhận\",\r\n      content: \"Bạn có chắc chắn muốn xóa?\",\r\n      okText: \"Đồng ý\",\r\n      okType: \"danger\",\r\n      cancelText: \"Hủy bỏ\",\r\n      onOk() {\r\n        new QuestionApi().delete(row).then((response) => {\r\n          message.success(\"Xóa thành công.\");\r\n        });\r\n      },\r\n      onCancel() {},\r\n    });\r\n  };\r\n\r\n  const addQuestion = (typeCode) => {\r\n    history.push(\r\n      `/lms/modules/assignment/questioncatalogs/questions/add/${typeCode}/${parent.catalogId}/${parent.id}`\r\n    );\r\n  };\r\n\r\n  const editQuestion = (row) => {\r\n    history.push(\r\n      `/lms/modules/assignment/questioncatalogs/questions/edit/${row.id}/${row.catalogId}`\r\n    );\r\n  };\r\n\r\n  const getQuestion = () => {\r\n    var questionApi = new QuestionApi();\r\n    questionApi.get(parent.id).then((response) => {\r\n      setParentQuestion(response.data);\r\n    });\r\n  };\r\n\r\n  const getAllQuestionTypes = () => {\r\n    var questionApi = new QuestionApi();\r\n    questionApi.getQuestionTypes().then((response) => {\r\n      setQuestionTypes(response.data.filter((x) => x.id != 3));\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllQuestionTypes();\r\n    getQuestion();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Flex alignItems=\"center\" justifyContent=\"between\" mobileFlex={false}>\r\n          <Flex className=\"mb-1\" mobileFlex={false}>\r\n            <div className=\"mr-md-3 mb-3\"></div>\r\n            <div className=\"mr-md-3 mb-3\"></div>\r\n            <div className=\"mr-md-3 mb-3\"></div>\r\n          </Flex>\r\n          <div>\r\n            {questionTypes && (\r\n              <Dropdown overlay={gerenateCreateQuetionButton}>\r\n                <Button type=\"primary\" icon={<PlusCircleOutlined />} block>\r\n                  Thêm câu hỏi con <DownOutlined />\r\n                </Button>\r\n              </Dropdown>\r\n            )}\r\n          </div>\r\n        </Flex>\r\n        <Row gutter={16}>\r\n          <Col span={24}>\r\n            <div className=\"table-responsive\">\r\n              <div className=\"ant-table\">\r\n                <div className=\"ant-table-container\">\r\n                  <div className=\"ant-table-content\">\r\n                    <table>\r\n                      <thead className=\"ant-table-thead\">\r\n                        <tr>\r\n                          <th className=\"ant-table-cell\" style={{ width: 25 }}>\r\n                            #\r\n                          </th>\r\n                          <th className=\"ant-table-cell\" style={{ width: 220 }}>\r\n                            Nội dung\r\n                          </th>\r\n                          <th className=\"ant-table-cell\">Loại câu hỏi</th>\r\n                          <th className=\"ant-table-cell\">Số câu hỏi con</th>\r\n                          <th className=\"ant-table-cell\">Danh mục</th>\r\n                          <th className=\"ant-table-cell\" style={{ width: 190 }}>\r\n                            Ngày tạo\r\n                          </th>\r\n                          <th\r\n                            className=\"ant-table-cell\"\r\n                            style={{ width: 60 }}\r\n                          ></th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody className=\"ant-table-tbody\">\r\n                        {parentQuesion &&\r\n                          parentQuesion.children.map((question, index) => {\r\n                            return (\r\n                              <tr\r\n                                className=\"ant-table-row\"\r\n                                key={`tr-ans-question-${question.id}`}\r\n                              >\r\n                                <td className=\"ant-table-cell \">{index + 1}</td>\r\n                                <td className=\"ant-table-cell \">\r\n                                  <Link\r\n                                    to={`/lms/modules/assignment/questioncatalogs/questions/edit/${question.id}/${question.catalogId}`}\r\n                                  >\r\n                                    {question.shortContent}\r\n                                  </Link>\r\n                                </td>\r\n                                <td className=\"ant-table-cell \">\r\n                                  {question.questionTypeName}\r\n                                </td>\r\n                                <td className=\"ant-table-cell \">\r\n                                  {question.totalQuestion}\r\n                                </td>\r\n                                <td className=\"ant-table-cell \">\r\n                                  {question.categoryName}\r\n                                </td>\r\n                                <td className=\"ant-table-cell \">\r\n                                  {moment(question.createdTime).format(\r\n                                    \"YYYY-MM-DD\"\r\n                                  )}\r\n                                </td>\r\n                                <td className=\"ant-table-cell \">\r\n                                  <div className=\"text-right\">\r\n                                    <EllipsisDropdown\r\n                                      menu={dropdownMenu(question)}\r\n                                    />\r\n                                  </div>\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        {/* <Row>\r\n          <Col span={24}>\r\n            <Form.Item>\r\n              <br />\r\n              <Button\r\n                type=\"dashed\"\r\n                onClick={() => {\r\n                  addQuestion();\r\n                }}\r\n                className=\"w-100\"\r\n              >\r\n                <PlusOutlined /> Thêm Đáp án\r\n              </Button>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row> */}\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChildrenQuestions;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PageHeaderAlt from \"components/layout-components/PageHeaderAlt\";\r\nimport { Tabs, Form, Button, message } from \"antd\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport GeneralField from \"./GeneralField\";\r\nimport ChildrenQuestions from \"./ChildrenQuestions\";\r\nimport QuestionApi from \"api/question-api\";\r\nimport { QuestionType } from \"types/QuestionType\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst getBase64 = (img, callback) => {\r\n  const reader = new FileReader();\r\n  reader.addEventListener(\"load\", () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n};\r\n\r\nconst ADD = \"ADD\";\r\nconst EDIT = \"EDIT\";\r\n\r\nconst QuestionForm = (props) => {\r\n  const { mode = ADD, param } = props;\r\n\r\n  const [form] = Form.useForm();\r\n  const [uploadedImg, setImage] = useState(\"\");\r\n  const [uploadLoading, setUploadLoading] = useState(false);\r\n  const [submitLoading, setSubmitLoading] = useState(false);\r\n  const [typeCode, setTypeCode] = useState(null);\r\n  const [item, setItem] = useState(null);\r\n  const [editItem, setEditItem] = useState(null);\r\n\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const questionApi = new QuestionApi();\r\n    if (mode === ADD) {\r\n      const { typeCode, catalogId, parentId } = param;\r\n      setTypeCode(typeCode);\r\n      const item = questionApi.createQuestion({ id: parseInt(typeCode) });\r\n      item.catalogId = parseInt(catalogId);\r\n      if (parentId) {\r\n        item.parentId = parseInt(parentId);\r\n      }\r\n      setItem(item);\r\n      setEditItem(item);\r\n    }\r\n    if (mode === EDIT) {\r\n      const { id } = param;\r\n      questionApi.get(parseInt(id)).then((response) => {\r\n        setItem(response.data);\r\n        setEditItem(response.data);\r\n      });\r\n    }\r\n  }, [form, mode, param, props]);\r\n\r\n  const goBack = () => {\r\n    const { typeCode, catalogId, parentId } = param;\r\n    if (editItem.parentId == 0) {\r\n      history.push(\r\n        `/lms/modules/assignment/questioncatalogs/questions/list/${catalogId}/questions`\r\n      );\r\n    } else {\r\n      history.push(\r\n        `/lms/modules/assignment/questioncatalogs/questions/edit/${editItem.parentId}/${catalogId}`\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleUploadChange = (info) => {\r\n    if (info.file.status === \"uploading\") {\r\n      setUploadLoading(true);\r\n      return;\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      getBase64(info.file.originFileObj, (imageUrl) => {\r\n        setImage(imageUrl);\r\n        setUploadLoading(true);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (item) => {\r\n    setEditItem(item);\r\n  };\r\n\r\n  const onFinish = () => {\r\n    setSubmitLoading(true);\r\n    new QuestionApi().save(editItem).then((response) => {\r\n      setSubmitLoading(false);\r\n      if (mode === ADD) {\r\n        message.success(`Tạo câu hỏi thành công.`);\r\n      }\r\n      if (mode === EDIT) {\r\n        message.success(`Cập nhật câu hỏi thành công.`);\r\n      }\r\n      goBack();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        layout=\"vertical\"\r\n        form={form}\r\n        name=\"advanced_search\"\r\n        className=\"ant-advanced-search-form\"\r\n      >\r\n        <PageHeaderAlt className=\"border-bottom\" overlap>\r\n          <div className=\"container\">\r\n            <Flex\r\n              className=\"py-2\"\r\n              mobileFlex={false}\r\n              justifyContent=\"between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <h4 className=\"mb-3\">\r\n                {mode === \"ADD\" ? \"Thêm mới câu hỏi\" : `Sửa câu hỏi`}\r\n              </h4>\r\n              <div className=\"mb-3\">\r\n                <Button\r\n                  className=\"mr-2\"\r\n                  onClick={() => {\r\n                    goBack();\r\n                  }}\r\n                >\r\n                  Hủy bỏ\r\n                </Button>\r\n                <Button\r\n                  type=\"primary\"\r\n                  onClick={() => onFinish()}\r\n                  htmlType=\"submit\"\r\n                  loading={submitLoading}\r\n                >\r\n                  {mode === \"ADD\" ? \"Thêm mới\" : `Cập nhật`}\r\n                </Button>\r\n              </div>\r\n            </Flex>\r\n          </div>\r\n        </PageHeaderAlt>\r\n        <div className=\"container\">\r\n          <Tabs defaultActiveKey=\"1\" style={{ marginTop: 30 }}>\r\n            <TabPane tab=\"Thông tin chung\" key=\"1\">\r\n              {item && (\r\n                <GeneralField\r\n                  handleChange={handleChange}\r\n                  item={item}\r\n                  typeCode={typeCode}\r\n                  uploadedImg={uploadedImg}\r\n                  uploadLoading={uploadLoading}\r\n                  handleUploadChange={handleUploadChange}\r\n                />\r\n              )}\r\n            </TabPane>\r\n            {item && item.questionTypeId === QuestionType.GQ && (\r\n              <TabPane tab=\"Câu hỏi con\" key=\"2\">\r\n                <ChildrenQuestions parent={item} />\r\n              </TabPane>\r\n            )}\r\n          </Tabs>\r\n        </div>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuestionForm;\r\n","import React from \"react\";\r\nimport QuestionForm from \"../QuestionForm\";\r\n\r\nconst AddQuestion = (props) => {\r\n  return <QuestionForm mode=\"ADD\" param={props.match.params} />;\r\n};\r\n\r\nexport default AddQuestion;\r\n","import React from 'react'\r\nimport QuestionForm from '../QuestionForm';\r\n\r\nconst EditQuestion = props => {\r\n\treturn (\r\n\t\t<QuestionForm mode=\"EDIT\" param={props.match.params}/>\r\n\t)\r\n}\r\n\r\nexport default EditQuestion\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport QuestionList from \"./list\";\r\nimport AddQuestion from \"./add\";\r\nimport EditQuestion from \"./edit\";\r\n\r\nconst QuestionRoute = ({ match }) => {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact from={`${match.url}`} to={`${match.url}/list/:catalogId/questions`} />\r\n      <Route\r\n        path={`${match.url}/add/:typeCode/:catalogId/:parentId?`}\r\n        component={AddQuestion}\r\n      />\r\n      <Route\r\n        path={`${match.url}/edit/:id/:catalogId`}\r\n        component={EditQuestion}\r\n      />\r\n      <Route\r\n        path={`${match.url}/list/:catalogId/:tab?`}\r\n        component={QuestionList}\r\n      />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default QuestionRoute;\r\n"],"sourceRoot":""}