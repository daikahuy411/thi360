{"version":3,"sources":["api/api-base.ts","constants/ChartConstant.js","components/shared-components/CustomStatistic/index.js","components/shared-components/DataDisplayWidget/index.js","components/shared-components/ChartWidget/index.js","api/dashboard-api.ts","views/app-views/home/index.js"],"names":["ApiBase","url","baseApiUrl","get","id","axios","getAll","query","searches","limit","start","post","save","item","put","delete","this","Configuration","baseApiEndpoint","COLOR_1","COLOR_2","COLOR_4","COLORS","apexLineChartDefaultOption","chart","zoom","enabled","toolbar","show","colors","dataLabels","stroke","width","curve","lineCap","legend","position","horizontalAlign","offsetY","itemMargin","vertical","tooltipHoverFormatter","val","opts","w","globals","series","seriesIndex","dataPointIndex","xaxis","categories","grid","lines","yaxis","apexAreaChartDefaultOption","apexBarChartDefaultOption","plotOptions","bar","horizontal","columnWidth","startingShapre","endingShape","inverseOrder","fill","opacity","tooltip","y","formatter","Value","props","value","size","className","CustomStatistic","title","defaultProps","DataDisplayWidget","icon","color","avatarSize","customStatisticProps","to","Flex","alignItems","flexDirection","shape","titleStyle","zIndex","extraStyle","right","top","ChartWidget","height","xAxis","customOptions","card","type","extra","direction","bodyClass","options","getChartTypeDefaultOption","isMobile","window","innerWidth","setLegendOffset","chartRef","current","lengend","querySelectorAll","style","marginRight","extraRef","offsetWidth","DIR_RTL","left","justifyContent","padding","useEffect","useRef","renderChart","onResize","setTimeout","ref","DashboardApi","getDashboard","weeklyRevenueData","name","data","SalesDashboard","useState","dashboard","setDashboard","setOptions","then","response","amount","licenseOptions","userLimit","examLimit","questionLimit","storageLimit","gutter","xs","sm","md","lg","xl","xxl","FileDoneOutlined","totalLessonPlan","APP_PREFIX_PATH","TrophyOutlined","totalPost","QuestionOutlined","totalClass","UserSwitchOutlined","totalUser"],"mappings":"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","file":"static/js/36.37954569.chunk.js","sourcesContent":["import { Configuration } from \"../configs\";\r\nimport axios from \"axios\";\r\n\r\nclass ApiBase {\r\n  baseApiUrl: string;\r\n\r\n  constructor(url: string) {\r\n    this.baseApiUrl = Configuration.baseApiEndpoint + url;\r\n  }\r\n\r\n  get = (id: number) => {\r\n    const url = `${this.baseApiUrl}/${id}`;\r\n    const response = axios.get(url);\r\n    return response;\r\n  };\r\n\r\n  getAll = (query: any) => {\r\n    const url = `${this.baseApiUrl}`;\r\n    const response = axios.get(url);\r\n    return response;\r\n  };\r\n\r\n  searches = (query: any) => {\r\n    const url = `${this.baseApiUrl}/searches`;\r\n    if (!query) {\r\n      query = { limit: 50, start: 0 };\r\n    }\r\n    const response = axios.post(url, query);\r\n    return response;\r\n  };\r\n\r\n  save = (item: any) => {\r\n    if (item.id > 0) {\r\n      return this.put(item);\r\n    } else {\r\n      return this.post(item);\r\n    }\r\n  };\r\n\r\n  post = (item: any) => {\r\n    const url = `${this.baseApiUrl}`;\r\n    const response = axios.post(url, item);\r\n    return response;\r\n  };\r\n\r\n  put = (item: any) => {\r\n    const url = `${this.baseApiUrl}/${item.id}`;\r\n    const response = axios.put(url, item);\r\n    return response;\r\n  };\r\n\r\n  delete = (item: any) => {\r\n    const url = `${this.baseApiUrl}`;\r\n    const response = axios.delete(`${url}/${item.id}`);\r\n    return response;\r\n  };\r\n}\r\n\r\nexport default ApiBase;\r\n","export const COLOR_1 = '#3e82f7';  // blue\r\nexport const COLOR_2 = '#04d182';  // cyan\r\nexport const COLOR_3 = '#ff6b72';  // volcano\r\nexport const COLOR_4 = '#ffc107';  // gold\r\nexport const COLOR_5 = '#a461d8';  // purple\r\nexport const COLOR_6 = '#fa8c16';  // orange\r\nexport const COLOR_7 = '#17bcff';  // geekblue\r\n\r\nexport const COLOR_1_LIGHT = 'rgba(62, 130, 247, 0.15)';\r\nexport const COLOR_2_LIGHT = 'rgba(4, 209, 130, 0.1)';\r\nexport const COLOR_3_LIGHT = 'rgba(222, 68, 54, 0.1)';\r\nexport const COLOR_4_LIGHT = 'rgba(255, 193, 7, 0.1)';\r\nexport const COLOR_5_LIGHT = 'rgba(139, 75, 157, 0.1)';\r\nexport const COLOR_6_LIGHT = 'rgba(250, 140, 22, .1)';\r\nexport const COLOR_7_LIGHT = 'rgba(23, 188, 255, 0.15)';\r\n\r\nexport const COLORS = [\r\n\tCOLOR_1,\r\n\tCOLOR_2,\r\n\tCOLOR_3,\r\n\tCOLOR_4,\r\n\tCOLOR_5,\r\n\tCOLOR_6,\r\n\tCOLOR_7\r\n]\r\n\r\nexport const COLORS_LIGHT = [\r\n\tCOLOR_1_LIGHT,\r\n\tCOLOR_2_LIGHT,\r\n\tCOLOR_3_LIGHT,\r\n\tCOLOR_4_LIGHT,\r\n\tCOLOR_5_LIGHT,\r\n\tCOLOR_6_LIGHT,\r\n\tCOLOR_7_LIGHT\r\n]\r\n\r\nexport const COLOR_AXES = '#edf2f9';\r\nexport const COLOR_TEXT = '#455560';\r\n\r\nexport const apexLineChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 3,\r\n\t\tcurve: 'smooth',\r\n\t\tlineCap: 'round'\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tgrid: {\r\n\t\txaxis: {\r\n\t\t\tlines: {\r\n\t\t\t\tshow: true,\r\n\t\t\t}\r\n\t\t},\r\n\t\t  yaxis: {\r\n\t\t\tlines: {\r\n\t\t\t  show: false,\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n}\r\n\r\nexport const apexAreaChartDefaultOption = {...apexLineChartDefaultOption}\r\n\r\nexport const apexBarChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tplotOptions: {\r\n\t\tbar: {\r\n\t\t\thorizontal: false,\r\n\t\t\tcolumnWidth: '25px',\r\n\t\t\tstartingShapre: 'rounded',\r\n\t\t\tendingShape: 'rounded'\r\n\t\t},\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\tshow: true,\r\n\t\twidth: 6,\r\n\t\tcurve: 'smooth',\r\n\t\tcolors: ['transparent']\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\tinverseOrder: true,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tfill: {\r\n\t\topacity: 1\r\n\t},\r\n\ttooltip: {\r\n\t\ty: {\r\n\t\t\tformatter: val => (`${val}`)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const apexPieChartDefaultOption = {\r\n\tcolors: [...COLORS],\r\n\tplotOptions: {\r\n\t\tpie: {\r\n\t\t\tsize: 50,\r\n\t\t  donut: {\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\ttotal: {\r\n\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\tshowAlways: true,\r\n\t\t\t\t\t\tlabel: '',\r\n\t\t\t\t\t\tfontSize: '18px',\r\n\t\t\t\t\t\tfontFamily: 'Roboto',\r\n\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\tcolor: '#1a3353',\r\n\t\t\t\t\t\tformatter: function (w) {\r\n\t\t\t\t\t\t\treturn w.globals.seriesTotals.reduce((a, b) => {\r\n\t\t\t\t\t\t\t\treturn a + b\r\n\t\t\t\t\t\t\t}, 0)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsize: '87%'\r\n\t\t  }\r\n\t\t}\r\n\t},\r\n\tlabels: [],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tlegend: {\r\n\t\tshow: false\r\n\t}\r\n}\r\n\r\nexport const apexSparklineChartDefultOption = {\r\n\tchart: {\r\n\t\ttype: 'line',\r\n\t\tsparkline: {\r\n\t\t\tenabled: true\r\n\t\t}\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 2,\r\n\t\tcurve: 'smooth'\r\n\t},\r\n\ttooltip: {\r\n\t\tfixed: {\r\n\t\t  \tenabled: false\r\n\t\t},\r\n\t\tx: {\r\n\t\t  \tshow: false\r\n\t\t},\r\n\t\ty: {\r\n\t\t\ttitle: {\r\n\t\t\t\tformatter: function (seriesName) {\r\n\t\t\t\t\treturn ''\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tmarker: {\r\n\t\t  show: false\r\n\t\t}\r\n\t}\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Value = props => {\r\n\tlet value;\r\n\tswitch(props.size) {\r\n\t\tcase 'lg':\r\n\t\t\tvalue = <h1 className=\"mb-0 font-weight-bold\">{props.value}</h1>\r\n\t\t\tbreak;\r\n\t\tcase 'md':\r\n\t\t\tvalue = <h2 className=\"mb-0 font-weight-bold\">{props.value}</h2>\r\n\t\t\tbreak;\r\n\t\tcase 'sm':\r\n\t\t\tvalue = <h3 className=\"mb-0 font-weight-bold\">{props.value}</h3>\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tvalue = <h3 className=\"mb-0 font-weight-bold\">{props.value}</h3>\r\n\t}\r\n\treturn value\r\n}\r\n\r\nexport const CustomStatistic = props => {\r\n\tconst { size, value, title } = props;\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Value value={value} size={size}/>\r\n\t\t\t<p className=\"mb-0 text-muted\">{title}</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nCustomStatistic.propTypes = {\r\n\ttitle: PropTypes.string,\r\n\tsize: PropTypes.string,\r\n\tvalue: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.number\r\n\t]),\r\n}\r\n\r\nCustomStatistic.defaultProps = {\r\n\tsize: 'md'\r\n};\r\n\r\n\r\nexport default CustomStatistic\r\n","import React from 'react'\r\nimport { Card, Avatar } from 'antd'\r\nimport Flex from '../Flex'\r\nimport CustomStatistic from '../CustomStatistic'\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nconst DataDisplayWidget = props => {\r\n\tconst { size, value, title, icon, color, avatarSize, vertical, url } = props\r\n\tconst customStatisticProps = { size, value, title }\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<Link to={url} >\r\n\t\t\t\t<Flex alignItems=\"center\" flexDirection={vertical ? 'column' : 'row'}>\r\n\t\t\t\t\t<Avatar size={avatarSize} shape=\"square\" icon={icon} className={`ant-avatar-${color}`} />\r\n\t\t\t\t\t<div className={vertical ? 'mt-3 text-center' : 'ml-3'}>\r\n\t\t\t\t\t\t<CustomStatistic {...customStatisticProps} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Link>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nDataDisplayWidget.defaultProps = {\r\n\tavatarSize: 50,\r\n\tvertical: false\r\n};\r\n\r\nexport default DataDisplayWidget\r\n","import React, { useRef, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Card } from 'antd';\r\nimport ApexChart from \"react-apexcharts\";\r\nimport { \r\n\tapexLineChartDefaultOption, \r\n\tapexBarChartDefaultOption,\r\n\tapexAreaChartDefaultOption\r\n} from 'constants/ChartConstant';\r\nimport ReactResizeDetector from 'react-resize-detector';\r\nimport { DIR_RTL } from 'constants/ThemeConstant';\r\n\r\nconst titleStyle = {\r\n\tposition: 'absolute',\r\n\tzIndex: '1'\r\n}\r\n\r\nconst extraStyle ={\r\n\tposition: 'absolute',\r\n\tzIndex: '1',\r\n\tright: '0',\r\n\ttop: '-2px'\r\n}\r\n\r\nconst getChartTypeDefaultOption = type => {\r\n\tswitch (type) {\r\n\t\tcase 'line':\r\n\t\t\treturn apexLineChartDefaultOption\r\n\t\tcase 'bar':\r\n\t\t\treturn apexBarChartDefaultOption\r\n\t\tcase 'area':\r\n\t\t\treturn apexAreaChartDefaultOption\r\n\t\tdefault:\r\n\t\t\treturn apexLineChartDefaultOption;\r\n\t}\r\n}\r\n\r\nconst ChartWidget = ({title, series, width, height, xAxis, customOptions, card, type, extra, direction, bodyClass}) =>  {\r\n\tlet options = getChartTypeDefaultOption(type)\r\n\tconst isMobile = window.innerWidth < 768 \r\n\tconst setLegendOffset = () => {\r\n\t\tif(chartRef.current) {\r\n\t\t\tconst lengend = chartRef.current.querySelectorAll('div.apexcharts-legend')[0]\r\n\t\t\tlengend.style.marginRight = `${isMobile ? 0 : extraRef.current?.offsetWidth}px`\r\n\t\t\tif(direction === DIR_RTL) {\r\n\t\t\t\tlengend.style.right = 'auto'\r\n\t\t\t\tlengend.style.left = '0'\r\n\t\t\t}\r\n\t\t\tif (isMobile) {\r\n\t\t\t\tlengend.style.position = 'relative'\r\n\t\t\t\tlengend.style.top = 0\r\n\t\t\t\tlengend.style.justifyContent = 'start';\r\n\t\t\t\tlengend.style.padding = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t} \r\n\r\n\tuseEffect(() => {\r\n\t\tsetLegendOffset()\r\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [])\r\n\t\r\n\tconst extraRef = useRef(null);\r\n\tconst chartRef = useRef();\r\n\t\r\n\toptions.xaxis.categories = xAxis\r\n\tif(customOptions) {\r\n\t\toptions = {...options, ...customOptions }\r\n\t}\r\n\t\r\n\tconst onResize = () => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetLegendOffset()\t\r\n\t\t}, 600);\r\n\t}\r\n\r\n\tconst renderChart = () => (\r\n\t\t<ReactResizeDetector onResize={onResize()}>\r\n\t\t\t<div style={direction === DIR_RTL ? {direction: 'ltr'}: {}} className=\"chartRef\" ref={chartRef}>\r\n\t\t\t\t<ApexChart options={options} type={type} series={series} width={width} height={height}/>\r\n\t\t\t</div>\r\n\t\t</ReactResizeDetector>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{card ? \r\n\t\t\t\t<Card >\r\n\t\t\t\t\t<div className={`position-relative ${bodyClass}`}>\r\n\t\t\t\t\t\t{<div style={!isMobile ? titleStyle : {}}>{title}</div> && <h4 className=\"font-weight-bold\" style={!isMobile ? titleStyle : {}}>{title}</h4>}\r\n\t\t\t\t\t\t{extra && <div ref={extraRef} style={!isMobile ? extraStyle : {}}>{extra}</div>}\r\n\t\t\t\t\t\t{renderChart()}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Card> \r\n\t\t\t\t: \r\n\t\t\t\trenderChart()\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nChartWidget.propTypes = {\r\n\ttitle: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.element\r\n\t]),\r\n\tseries: PropTypes.array.isRequired,\r\n\txAxis: PropTypes.array,\r\n\tcustomOptions: PropTypes.object,\r\n\twidth: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.number\r\n\t]),\r\n\theight: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.number\r\n\t]),\r\n\tcard: PropTypes.bool,\r\n\ttype: PropTypes.string,\r\n\textra: PropTypes.element,\r\n\tbodyClass: PropTypes.string\r\n}\r\n\r\nChartWidget.defaultProps = {\r\n\tseries: [],\r\n\theight: 300,\r\n\twidth: '100%',\r\n\tcard: true,\r\n\ttype: 'line'\r\n};\r\n\r\nexport default ChartWidget\r\n","import ApiBase from './api-base';\r\nimport axios from \"axios\";\r\n\r\nexport default class DashboardApi extends ApiBase {\r\n  constructor() {\r\n    super('dashboard');\r\n  }\r\n\r\n  getDashboard = (id: number) => {\r\n    const url = `${this.baseApiUrl}`;\r\n    const response = axios.get(url);\r\n    return response;\r\n  };\r\n\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Button, Card, Table, Tag, Select, Badge, List } from \"antd\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport DataDisplayWidget from \"components/shared-components/DataDisplayWidget\";\r\nimport {\r\n  CloudDownloadOutlined,\r\n  ArrowUpOutlined,\r\n  UserSwitchOutlined,\r\n  FileDoneOutlined,\r\n  SyncOutlined,\r\n  BarChartOutlined,\r\n  TrophyOutlined,\r\n  QuestionOutlined,\r\n} from \"@ant-design/icons\";\r\nimport ChartWidget from \"components/shared-components/ChartWidget\";\r\nimport { COLORS } from \"constants/ChartConstant\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DashboardApi from \"api/dashboard-api\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { APP_PREFIX_PATH } from \"configs/AppConfig\";\r\n\r\nexport const weeklyRevenueData = {\r\n  series: [\r\n    {\r\n      name: \"Earning\",\r\n      data: [45, 52, 38, 24, 33, 26, 21],\r\n    },\r\n  ],\r\n  categories: [\r\n    \"08 Jul\",\r\n    \"09 Jul\",\r\n    \"10 Jul\",\r\n    \"11 Jul\",\r\n    \"12 Jul\",\r\n    \"13 Jul\",\r\n    \"14 Jul\",\r\n  ],\r\n};\r\n\r\nconst WeeklyRevenue = ({ dashboard }) => {\r\n  const { direction } = useSelector((state) => state.theme);\r\n  const [categories, setCategories] = useState(null);\r\n  const [series, setSeries] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let cates = dashboard.examAttemptByDays.map((item) => {\r\n      return item.title;\r\n    });\r\n    let data = dashboard.examAttemptByDays.map((item) => {\r\n      return item.count;\r\n    });\r\n    setSeries([\r\n      {\r\n        name: \"Earning\",\r\n        data: [...data],\r\n      },\r\n    ]);\r\n    setCategories([...cates]);\r\n  }, []);\r\n\r\n  return (\r\n    <Card>\r\n      <Row gutter={16}>\r\n        <Col xs={24} sm={24} md={24} lg={8}>\r\n          <Flex\r\n            className=\"h-100\"\r\n            flexDirection=\"column\"\r\n            justifyContent=\"between\"\r\n          >\r\n            <div>\r\n              <h4 className=\"mb-0\">Số lượt thi</h4>\r\n              <span className=\"text-muted\">8 - 15 Jul, 2020</span>\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <h1 className=\"font-weight-bold\">$27,188.00</h1>\r\n              <p className=\"text-success\">\r\n                <span>\r\n                  <ArrowUpOutlined />\r\n                  <span> 17% </span>\r\n                </span>\r\n                <span>growth from last week</span>\r\n              </p>\r\n              <p>\r\n                Total gross income figure based from the date range given above.\r\n              </p>\r\n            </div>\r\n          </Flex>\r\n        </Col>\r\n        <Col xs={24} sm={24} md={24} lg={16}>\r\n          {categories && series && (\r\n            <ChartWidget\r\n              card={false}\r\n              series={series}\r\n              xAxis={categories}\r\n              title=\"Lượt thi 7 ngày gần đây\"\r\n              height={250}\r\n              type=\"bar\"\r\n              customOptions={{ colors: COLORS }}\r\n              direction={direction}\r\n            />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst DisplayDataSet = ({ dashboard }) => (\r\n  <Row gutter={16}>\r\n    <Col xs={24} sm={24} md={24} lg={12} xl={12} xxl={12}>\r\n      <DataDisplayWidget\r\n        icon={<FileDoneOutlined />}\r\n        value={dashboard.totalExamAttempt}\r\n        title=\"Tổng số lượt thi\"\r\n        color=\"cyan\"\r\n        vertical={true}\r\n        avatarSize={55}\r\n      />\r\n      <DataDisplayWidget\r\n        icon={<TrophyOutlined />}\r\n        value={dashboard.totalExam}\r\n        title=\"Tổng số Kỳ thi\"\r\n        color=\"gold\"\r\n        vertical={true}\r\n        avatarSize={55}\r\n      />\r\n    </Col>\r\n    <Col xs={24} sm={24} md={24} lg={12} xl={12} xxl={12}>\r\n      <DataDisplayWidget\r\n        icon={<QuestionOutlined />}\r\n        value={dashboard.totalQuestion}\r\n        title=\"Tổng số câu hỏi\"\r\n        color=\"blue\"\r\n        vertical={true}\r\n        avatarSize={55}\r\n      />\r\n      <DataDisplayWidget\r\n        icon={<UserSwitchOutlined />}\r\n        value={dashboard.totalUser}\r\n        title=\"Tổng số tài khoản\"\r\n        color=\"volcano\"\r\n        vertical={true}\r\n        avatarSize={55}\r\n      />\r\n    </Col>\r\n  </Row>\r\n);\r\n\r\nconst SalesDashboard = () => {\r\n  const [dashboard, setDashboard] = useState(null);\r\n  const [options, setOptions] = useState(null);\r\n\r\n  useEffect(() => {\r\n    new DashboardApi().getDashboard().then((response) => {\r\n      setOptions([\r\n        {\r\n          title: \"Số tài khoản\",\r\n          amount: response.data.licenseOptions.userLimit,\r\n        },\r\n        {\r\n          title: \"Số kỳ thi\",\r\n          amount: response.data.licenseOptions.examLimit,\r\n        },\r\n        {\r\n          title: \"Số câu hỏi\",\r\n          amount: response.data.licenseOptions.questionLimit,\r\n        },\r\n        {\r\n          title: \"Dung lượng lưu trữ file (G)\",\r\n          amount: response.data.licenseOptions.storageLimit,\r\n        },\r\n      ]);\r\n      setDashboard(response.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {dashboard && (\r\n        <>\r\n          <Card title=\"Thống kê\">\r\n            <Row gutter={16}>\r\n              <Col xs={24} sm={24} md={24} lg={12} xl={12} xxl={12}>\r\n                <DataDisplayWidget\r\n                  icon={<FileDoneOutlined />}\r\n                  value={dashboard.totalLessonPlan}\r\n                  title=\"Tổng số Giáo án  \"\r\n                  color=\"cyan\"\r\n                  url={`${APP_PREFIX_PATH}/modules/lessonplans`}\r\n                  vertical={true}\r\n                  avatarSize={55}\r\n                />\r\n                <DataDisplayWidget\r\n                  icon={<TrophyOutlined />}\r\n                  value={dashboard.totalPost}\r\n                  title=\"Tổng số Tin tức\"\r\n                  color=\"gold\"\r\n                  url={`${APP_PREFIX_PATH}/modules/myoffice/news/posts/list`}\r\n                  vertical={true}\r\n                  avatarSize={55}\r\n                />\r\n              </Col>\r\n              <Col xs={24} sm={24} md={24} lg={12} xl={12} xxl={12}>\r\n                <DataDisplayWidget\r\n                  icon={<QuestionOutlined />}\r\n                  value={dashboard.totalClass}\r\n                  title=\"Tổng số Lớp học\"\r\n                  url={`${APP_PREFIX_PATH}/modules/system/classes/list`}\r\n                  color=\"blue\"\r\n                  vertical={true}\r\n                  avatarSize={55}\r\n                />\r\n                <DataDisplayWidget\r\n                  icon={<UserSwitchOutlined />}\r\n                  value={dashboard.totalUser}\r\n                  url={`${APP_PREFIX_PATH}/modules/system/users`}\r\n                  title=\"Tổng số tài khoản\"\r\n                  color=\"volcano\"\r\n                  vertical={true}\r\n                  avatarSize={55}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n          {/* <Row gutter={16}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24} xxl={24}>\r\n              <WeeklyRevenue dashboard={dashboard} />\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n          <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n              <DisplayDataSet dashboard={dashboard} />\r\n            </Col>\r\n            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n              <Card title=\"Gói dịch vụ đang sử dụng\">\r\n                <List\r\n                  itemLayout=\"horizontal\"\r\n                  dataSource={options}\r\n                  renderItem={(item) => (\r\n                    <List.Item>\r\n                      <div className=\"d-flex align-items-center justify-content-between w-100\">\r\n                        <div>\r\n                          <span className=\"text-muted\">{item.title}</span>\r\n                        </div>\r\n                        <div>\r\n                          <span className=\"font-weight-bold\">\r\n                            <NumberFormat\r\n                              value={item.amount}\r\n                              thousandSeparator={true}\r\n                              displayType=\"text\"\r\n                            ></NumberFormat>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </List.Item>\r\n                  )}\r\n                ></List>\r\n              </Card>\r\n            </Col>\r\n          </Row> */}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SalesDashboard;\r\n"],"sourceRoot":""}